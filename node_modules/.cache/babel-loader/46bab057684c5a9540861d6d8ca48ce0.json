{"ast":null,"code":"import _createClass from\"/Users/nastassianguyen/Desktop/proj/EagleTracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nastassianguyen/Desktop/proj/EagleTracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nastassianguyen/Desktop/proj/EagleTracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _wrapNativeSuper from\"/Users/nastassianguyen/Desktop/proj/EagleTracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";import _classCallCheck from\"/Users/nastassianguyen/Desktop/proj/EagleTracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";/// <reference path=\"./custom.d.ts\" />\n// tslint:disable\n/**\n * TrackingAPI\n * API for retrieving tracking data and changing settings on LightBug & RemoteThings tracking devices\n *\n * OpenAPI spec version: 1.1.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */import*as url from\"url\";import*as portableFetch from\"portable-fetch\";var BASE_PATH=\"https://api.thelightbug.com/api\".replace(/\\/+$/,\"\");/**\n *\n * @export\n */export var COLLECTION_FORMATS={csv:\",\",ssv:\" \",tsv:\"\\t\",pipes:\"|\"};/**\n *\n * @export\n * @interface FetchAPI\n */ /**\n *\n * @export\n * @class BaseAPI\n */export var BaseAPI=function BaseAPI(configuration){var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;var fetch=arguments.length>2&&arguments[2]!==undefined?arguments[2]:portableFetch;_classCallCheck(this,BaseAPI);this.basePath=basePath;this.fetch=fetch;this.configuration=void 0;if(configuration){this.configuration=configuration;}};;/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */export var RequiredError=/*#__PURE__*/function(_Error){_inherits(RequiredError,_Error);var _super=_createSuper(RequiredError);function RequiredError(field,msg){var _this;_classCallCheck(this,RequiredError);_this=_super.call(this,msg);_this.field=field;_this.name=void 0;return _this;}return RequiredError;}(/*#__PURE__*/_wrapNativeSuper(Error));/**\n *\n * @export\n * @interface AccessToken\n */ /**\n * DeviceApi - fetch parameter creator\n * @export\n */export var DeviceApiFetchParamCreator=function DeviceApiFetchParamCreator(configuration){return{/**\n         *\n         * @summary Find a model instance by {{id}} from the data source.\n         * @param {string} id Model id\n         * @param {string} [filter] Filter defining fields and include - must be a JSON-encoded string ({\\&quot;something\\&quot;:\\&quot;value\\&quot;})\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */deviceFindById:function deviceFindById(id,filter){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling deviceFindById.');}var localVarPath=\"/devices/{id}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(filter!==undefined){localVarQueryParameter['filter']=filter;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Creates a new instance in gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeCreateGatewayReadings:function devicePrototypeCreateGatewayReadings(id,data){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeCreateGatewayReadings.');}var localVarPath=\"/devices/{id}/gatewayReadings\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'POST'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"SensorReading\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(data||{}):data||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Creates a new instance in messages of this model.\n         * @param {number} id device id\n         * @param {DeviceMessage} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeCreateMessages:function devicePrototypeCreateMessages(id,data){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeCreateMessages.');}var localVarPath=\"/devices/{id}/messages\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'POST'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"DeviceMessage\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(data||{}):data||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Create alert/notification trigger for device\n         * @param {number} id device id\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeCreateNotificationTriggers:function devicePrototypeCreateNotificationTriggers(id,data){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeCreateNotificationTriggers.');}var localVarPath=\"/devices/{id}/notificationTriggers\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'POST'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"NotificationTrigger\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(data||{}):data||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Deletes all gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDeleteGatewayReadings:function devicePrototypeDeleteGatewayReadings(id){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeDeleteGatewayReadings.');}var localVarPath=\"/devices/{id}/gatewayReadings\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'DELETE'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Deletes all messages of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDeleteMessages:function devicePrototypeDeleteMessages(id){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeDeleteMessages.');}var localVarPath=\"/devices/{id}/messages\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'DELETE'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Remove all alert/notification trigger for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDeleteNotificationTriggers:function devicePrototypeDeleteNotificationTriggers(id){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeDeleteNotificationTriggers.');}var localVarPath=\"/devices/{id}/notificationTriggers\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'DELETE'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Delete a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdGatewayReadings:function devicePrototypeDestroyByIdGatewayReadings(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeDestroyByIdGatewayReadings.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeDestroyByIdGatewayReadings.');}var localVarPath=\"/devices/{id}/gatewayReadings/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'DELETE'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Remove alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdNotificationTriggers:function devicePrototypeDestroyByIdNotificationTriggers(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeDestroyByIdNotificationTriggers.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeDestroyByIdNotificationTriggers.');}var localVarPath=\"/devices/{id}/notificationTriggers/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'DELETE'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Delete a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdPoints:function devicePrototypeDestroyByIdPoints(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeDestroyByIdPoints.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeDestroyByIdPoints.');}var localVarPath=\"/devices/{id}/points/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'DELETE'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Delete a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdTransients:function devicePrototypeDestroyByIdTransients(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeDestroyByIdTransients.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeDestroyByIdTransients.');}var localVarPath=\"/devices/{id}/transients/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'DELETE'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Find a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdGatewayReadings:function devicePrototypeFindByIdGatewayReadings(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeFindByIdGatewayReadings.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeFindByIdGatewayReadings.');}var localVarPath=\"/devices/{id}/gatewayReadings/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Find a related item by id for notificationTriggers.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdNotificationTriggers:function devicePrototypeFindByIdNotificationTriggers(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeFindByIdNotificationTriggers.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeFindByIdNotificationTriggers.');}var localVarPath=\"/devices/{id}/notificationTriggers/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Retrieve a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdPoints:function devicePrototypeFindByIdPoints(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeFindByIdPoints.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeFindByIdPoints.');}var localVarPath=\"/devices/{id}/points/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Retrieve a specific reading for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for readings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdReadings:function devicePrototypeFindByIdReadings(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeFindByIdReadings.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeFindByIdReadings.');}var localVarPath=\"/devices/{id}/readings/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Find a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdTransients:function devicePrototypeFindByIdTransients(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeFindByIdTransients.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeFindByIdTransients.');}var localVarPath=\"/devices/{id}/transients/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @param {number} id device id\n         * @param {number} duration How long to go into flightMode, in minutes\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFlightMode:function devicePrototypeFlightMode(id,duration){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeFlightMode.');}// verify required parameter 'duration' is not null or undefined\nif(duration===null||duration===undefined){throw new RequiredError('duration','Required parameter duration was null or undefined when calling devicePrototypeFlightMode.');}var localVarPath=\"/devices/{id}/flightMode\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(duration!==undefined){localVarQueryParameter['duration']=duration;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Retrieve configuration for a device\n         * @param {number} id device id\n         * @param {boolean} [refresh] unused\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetConfig:function devicePrototypeGetConfig(id,refresh){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeGetConfig.');}var localVarPath=\"/devices/{id}/config\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(refresh!==undefined){localVarQueryParameter['refresh']=refresh;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Queries gatewayReadings of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetGatewayReadings:function devicePrototypeGetGatewayReadings(id,filter){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeGetGatewayReadings.');}var localVarPath=\"/devices/{id}/gatewayReadings\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(filter!==undefined){localVarQueryParameter['filter']=filter;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Queries messages of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetMessages:function devicePrototypeGetMessages(id,filter){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeGetMessages.');}var localVarPath=\"/devices/{id}/messages\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(filter!==undefined){localVarQueryParameter['filter']=filter;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Get alerts for device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetNotificationTriggers:function devicePrototypeGetNotificationTriggers(id,filter){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeGetNotificationTriggers.');}var localVarPath=\"/devices/{id}/notificationTriggers\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(filter!==undefined){localVarQueryParameter['filter']=filter;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Retrieve points for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetPoints:function devicePrototypeGetPoints(id,filter){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeGetPoints.');}var localVarPath=\"/devices/{id}/points\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(filter!==undefined){localVarQueryParameter['filter']=filter;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Retrieve readings for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetReadings:function devicePrototypeGetReadings(id,filter){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeGetReadings.');}var localVarPath=\"/devices/{id}/readings\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(filter!==undefined){localVarQueryParameter['filter']=filter;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Get safe-zone for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetSafeZone:function devicePrototypeGetSafeZone(id){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeGetSafeZone.');}var localVarPath=\"/devices/{id}/getSafeZone\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Queries transients of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetTransients:function devicePrototypeGetTransients(id,filter){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeGetTransients.');}var localVarPath=\"/devices/{id}/transients\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(filter!==undefined){localVarQueryParameter['filter']=filter;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @param {number} id device id\n         * @param {string} nearbyId\n         * @param {string} dateRange\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeNearbyDeviceData:function devicePrototypeNearbyDeviceData(id,nearbyId,dateRange){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeNearbyDeviceData.');}// verify required parameter 'nearbyId' is not null or undefined\nif(nearbyId===null||nearbyId===undefined){throw new RequiredError('nearbyId','Required parameter nearbyId was null or undefined when calling devicePrototypeNearbyDeviceData.');}// verify required parameter 'dateRange' is not null or undefined\nif(dateRange===null||dateRange===undefined){throw new RequiredError('dateRange','Required parameter dateRange was null or undefined when calling devicePrototypeNearbyDeviceData.');}var localVarPath=\"/devices/{id}/nearbyDeviceData\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(nearbyId!==undefined){localVarQueryParameter['nearbyId']=nearbyId;}if(dateRange!==undefined){localVarQueryParameter['dateRange']=dateRange;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @param {number} id device id\n         * @param {string} [dateRange]\n         * @param {string} [correlationId]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeNearbyDevices:function devicePrototypeNearbyDevices(id,dateRange,correlationId){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeNearbyDevices.');}var localVarPath=\"/devices/{id}/nearbyDevices\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(dateRange!==undefined){localVarQueryParameter['dateRange']=dateRange;}if(correlationId!==undefined){localVarQueryParameter['correlationId']=correlationId;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Update safe-zone for device\n         * @param {number} id device id\n         * @param {Array<GeoPoint>} data Array of {lat:x,lng:y} points denoting the vertices of the safe-zone\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeSetSafeZone:function devicePrototypeSetSafeZone(id,data){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeSetSafeZone.');}// verify required parameter 'data' is not null or undefined\nif(data===null||data===undefined){throw new RequiredError('data','Required parameter data was null or undefined when calling devicePrototypeSetSafeZone.');}var localVarPath=\"/devices/{id}/setSafeZone\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'POST'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"Array&lt;GeoPoint&gt;\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(data||{}):data||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Update a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateByIdGatewayReadings:function devicePrototypeUpdateByIdGatewayReadings(id,fk,data){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeUpdateByIdGatewayReadings.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeUpdateByIdGatewayReadings.');}var localVarPath=\"/devices/{id}/gatewayReadings/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'PUT'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"SensorReading\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(data||{}):data||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Update an alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateByIdNotificationTriggers:function devicePrototypeUpdateByIdNotificationTriggers(id,fk,data){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeUpdateByIdNotificationTriggers.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeUpdateByIdNotificationTriggers.');}var localVarPath=\"/devices/{id}/notificationTriggers/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'PUT'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"NotificationTrigger\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(data||{}):data||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Update a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {DeviceTransient} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateByIdTransients:function devicePrototypeUpdateByIdTransients(id,fk,data){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeUpdateByIdTransients.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling devicePrototypeUpdateByIdTransients.');}var localVarPath=\"/devices/{id}/transients/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'PUT'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"DeviceTransient\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(data||{}):data||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Update configuration for a device\n         * @param {number} id device id\n         * @param {DeviceConfig} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateConfig:function devicePrototypeUpdateConfig(id,data){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling devicePrototypeUpdateConfig.');}var localVarPath=\"/devices/{id}/config\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'PUT'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"DeviceConfig\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(data||{}):data||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};}};};/**\n * DeviceApi - functional programming interface\n * @export\n */export var DeviceApiFp=function DeviceApiFp(configuration){return{/**\n         *\n         * @summary Find a model instance by {{id}} from the data source.\n         * @param {string} id Model id\n         * @param {string} [filter] Filter defining fields and include - must be a JSON-encoded string ({\\&quot;something\\&quot;:\\&quot;value\\&quot;})\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */deviceFindById:function deviceFindById(id,filter,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).deviceFindById(id,filter,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Creates a new instance in gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeCreateGatewayReadings:function devicePrototypeCreateGatewayReadings(id,data,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeCreateGatewayReadings(id,data,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Creates a new instance in messages of this model.\n         * @param {number} id device id\n         * @param {DeviceMessage} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeCreateMessages:function devicePrototypeCreateMessages(id,data,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeCreateMessages(id,data,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Create alert/notification trigger for device\n         * @param {number} id device id\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeCreateNotificationTriggers:function devicePrototypeCreateNotificationTriggers(id,data,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeCreateNotificationTriggers(id,data,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Deletes all gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDeleteGatewayReadings:function devicePrototypeDeleteGatewayReadings(id,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeDeleteGatewayReadings(id,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response;}else{throw response;}});};},/**\n         *\n         * @summary Deletes all messages of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDeleteMessages:function devicePrototypeDeleteMessages(id,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeDeleteMessages(id,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response;}else{throw response;}});};},/**\n         *\n         * @summary Remove all alert/notification trigger for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDeleteNotificationTriggers:function devicePrototypeDeleteNotificationTriggers(id,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeDeleteNotificationTriggers(id,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response;}else{throw response;}});};},/**\n         *\n         * @summary Delete a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdGatewayReadings:function devicePrototypeDestroyByIdGatewayReadings(id,fk,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeDestroyByIdGatewayReadings(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response;}else{throw response;}});};},/**\n         *\n         * @summary Remove alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdNotificationTriggers:function devicePrototypeDestroyByIdNotificationTriggers(id,fk,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeDestroyByIdNotificationTriggers(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response;}else{throw response;}});};},/**\n         *\n         * @summary Delete a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdPoints:function devicePrototypeDestroyByIdPoints(id,fk,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeDestroyByIdPoints(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response;}else{throw response;}});};},/**\n         *\n         * @summary Delete a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdTransients:function devicePrototypeDestroyByIdTransients(id,fk,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeDestroyByIdTransients(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response;}else{throw response;}});};},/**\n         *\n         * @summary Find a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdGatewayReadings:function devicePrototypeFindByIdGatewayReadings(id,fk,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeFindByIdGatewayReadings(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Find a related item by id for notificationTriggers.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdNotificationTriggers:function devicePrototypeFindByIdNotificationTriggers(id,fk,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeFindByIdNotificationTriggers(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Retrieve a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdPoints:function devicePrototypeFindByIdPoints(id,fk,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeFindByIdPoints(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Retrieve a specific reading for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for readings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdReadings:function devicePrototypeFindByIdReadings(id,fk,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeFindByIdReadings(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Find a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdTransients:function devicePrototypeFindByIdTransients(id,fk,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeFindByIdTransients(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @param {number} id device id\n         * @param {number} duration How long to go into flightMode, in minutes\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFlightMode:function devicePrototypeFlightMode(id,duration,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeFlightMode(id,duration,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Retrieve configuration for a device\n         * @param {number} id device id\n         * @param {boolean} [refresh] unused\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetConfig:function devicePrototypeGetConfig(id,refresh,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeGetConfig(id,refresh,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Queries gatewayReadings of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetGatewayReadings:function devicePrototypeGetGatewayReadings(id,filter,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeGetGatewayReadings(id,filter,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Queries messages of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetMessages:function devicePrototypeGetMessages(id,filter,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeGetMessages(id,filter,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Get alerts for device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetNotificationTriggers:function devicePrototypeGetNotificationTriggers(id,filter,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeGetNotificationTriggers(id,filter,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Retrieve points for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetPoints:function devicePrototypeGetPoints(id,filter,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeGetPoints(id,filter,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Retrieve readings for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetReadings:function devicePrototypeGetReadings(id,filter,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeGetReadings(id,filter,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Get safe-zone for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetSafeZone:function devicePrototypeGetSafeZone(id,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeGetSafeZone(id,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Queries transients of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetTransients:function devicePrototypeGetTransients(id,filter,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeGetTransients(id,filter,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @param {number} id device id\n         * @param {string} nearbyId\n         * @param {string} dateRange\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeNearbyDeviceData:function devicePrototypeNearbyDeviceData(id,nearbyId,dateRange,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeNearbyDeviceData(id,nearbyId,dateRange,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @param {number} id device id\n         * @param {string} [dateRange]\n         * @param {string} [correlationId]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeNearbyDevices:function devicePrototypeNearbyDevices(id,dateRange,correlationId,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeNearbyDevices(id,dateRange,correlationId,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Update safe-zone for device\n         * @param {number} id device id\n         * @param {Array<GeoPoint>} data Array of {lat:x,lng:y} points denoting the vertices of the safe-zone\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeSetSafeZone:function devicePrototypeSetSafeZone(id,data,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeSetSafeZone(id,data,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Update a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateByIdGatewayReadings:function devicePrototypeUpdateByIdGatewayReadings(id,fk,data,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeUpdateByIdGatewayReadings(id,fk,data,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Update an alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateByIdNotificationTriggers:function devicePrototypeUpdateByIdNotificationTriggers(id,fk,data,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeUpdateByIdNotificationTriggers(id,fk,data,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Update a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {DeviceTransient} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateByIdTransients:function devicePrototypeUpdateByIdTransients(id,fk,data,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeUpdateByIdTransients(id,fk,data,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Update configuration for a device\n         * @param {number} id device id\n         * @param {DeviceConfig} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateConfig:function devicePrototypeUpdateConfig(id,data,options){var localVarFetchArgs=DeviceApiFetchParamCreator(configuration).devicePrototypeUpdateConfig(id,data,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};}};};/**\n * DeviceApi - factory interface\n * @export\n */export var DeviceApiFactory=function DeviceApiFactory(configuration,fetch,basePath){return{/**\n         *\n         * @summary Find a model instance by {{id}} from the data source.\n         * @param {string} id Model id\n         * @param {string} [filter] Filter defining fields and include - must be a JSON-encoded string ({\\&quot;something\\&quot;:\\&quot;value\\&quot;})\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */deviceFindById:function deviceFindById(id,filter,options){return DeviceApiFp(configuration).deviceFindById(id,filter,options)(fetch,basePath);},/**\n         *\n         * @summary Creates a new instance in gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeCreateGatewayReadings:function devicePrototypeCreateGatewayReadings(id,data,options){return DeviceApiFp(configuration).devicePrototypeCreateGatewayReadings(id,data,options)(fetch,basePath);},/**\n         *\n         * @summary Creates a new instance in messages of this model.\n         * @param {number} id device id\n         * @param {DeviceMessage} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeCreateMessages:function devicePrototypeCreateMessages(id,data,options){return DeviceApiFp(configuration).devicePrototypeCreateMessages(id,data,options)(fetch,basePath);},/**\n         *\n         * @summary Create alert/notification trigger for device\n         * @param {number} id device id\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeCreateNotificationTriggers:function devicePrototypeCreateNotificationTriggers(id,data,options){return DeviceApiFp(configuration).devicePrototypeCreateNotificationTriggers(id,data,options)(fetch,basePath);},/**\n         *\n         * @summary Deletes all gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDeleteGatewayReadings:function devicePrototypeDeleteGatewayReadings(id,options){return DeviceApiFp(configuration).devicePrototypeDeleteGatewayReadings(id,options)(fetch,basePath);},/**\n         *\n         * @summary Deletes all messages of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDeleteMessages:function devicePrototypeDeleteMessages(id,options){return DeviceApiFp(configuration).devicePrototypeDeleteMessages(id,options)(fetch,basePath);},/**\n         *\n         * @summary Remove all alert/notification trigger for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDeleteNotificationTriggers:function devicePrototypeDeleteNotificationTriggers(id,options){return DeviceApiFp(configuration).devicePrototypeDeleteNotificationTriggers(id,options)(fetch,basePath);},/**\n         *\n         * @summary Delete a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdGatewayReadings:function devicePrototypeDestroyByIdGatewayReadings(id,fk,options){return DeviceApiFp(configuration).devicePrototypeDestroyByIdGatewayReadings(id,fk,options)(fetch,basePath);},/**\n         *\n         * @summary Remove alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdNotificationTriggers:function devicePrototypeDestroyByIdNotificationTriggers(id,fk,options){return DeviceApiFp(configuration).devicePrototypeDestroyByIdNotificationTriggers(id,fk,options)(fetch,basePath);},/**\n         *\n         * @summary Delete a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdPoints:function devicePrototypeDestroyByIdPoints(id,fk,options){return DeviceApiFp(configuration).devicePrototypeDestroyByIdPoints(id,fk,options)(fetch,basePath);},/**\n         *\n         * @summary Delete a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeDestroyByIdTransients:function devicePrototypeDestroyByIdTransients(id,fk,options){return DeviceApiFp(configuration).devicePrototypeDestroyByIdTransients(id,fk,options)(fetch,basePath);},/**\n         *\n         * @summary Find a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdGatewayReadings:function devicePrototypeFindByIdGatewayReadings(id,fk,options){return DeviceApiFp(configuration).devicePrototypeFindByIdGatewayReadings(id,fk,options)(fetch,basePath);},/**\n         *\n         * @summary Find a related item by id for notificationTriggers.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdNotificationTriggers:function devicePrototypeFindByIdNotificationTriggers(id,fk,options){return DeviceApiFp(configuration).devicePrototypeFindByIdNotificationTriggers(id,fk,options)(fetch,basePath);},/**\n         *\n         * @summary Retrieve a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdPoints:function devicePrototypeFindByIdPoints(id,fk,options){return DeviceApiFp(configuration).devicePrototypeFindByIdPoints(id,fk,options)(fetch,basePath);},/**\n         *\n         * @summary Retrieve a specific reading for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for readings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdReadings:function devicePrototypeFindByIdReadings(id,fk,options){return DeviceApiFp(configuration).devicePrototypeFindByIdReadings(id,fk,options)(fetch,basePath);},/**\n         *\n         * @summary Find a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFindByIdTransients:function devicePrototypeFindByIdTransients(id,fk,options){return DeviceApiFp(configuration).devicePrototypeFindByIdTransients(id,fk,options)(fetch,basePath);},/**\n         *\n         * @param {number} id device id\n         * @param {number} duration How long to go into flightMode, in minutes\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeFlightMode:function devicePrototypeFlightMode(id,duration,options){return DeviceApiFp(configuration).devicePrototypeFlightMode(id,duration,options)(fetch,basePath);},/**\n         *\n         * @summary Retrieve configuration for a device\n         * @param {number} id device id\n         * @param {boolean} [refresh] unused\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetConfig:function devicePrototypeGetConfig(id,refresh,options){return DeviceApiFp(configuration).devicePrototypeGetConfig(id,refresh,options)(fetch,basePath);},/**\n         *\n         * @summary Queries gatewayReadings of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetGatewayReadings:function devicePrototypeGetGatewayReadings(id,filter,options){return DeviceApiFp(configuration).devicePrototypeGetGatewayReadings(id,filter,options)(fetch,basePath);},/**\n         *\n         * @summary Queries messages of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetMessages:function devicePrototypeGetMessages(id,filter,options){return DeviceApiFp(configuration).devicePrototypeGetMessages(id,filter,options)(fetch,basePath);},/**\n         *\n         * @summary Get alerts for device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetNotificationTriggers:function devicePrototypeGetNotificationTriggers(id,filter,options){return DeviceApiFp(configuration).devicePrototypeGetNotificationTriggers(id,filter,options)(fetch,basePath);},/**\n         *\n         * @summary Retrieve points for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetPoints:function devicePrototypeGetPoints(id,filter,options){return DeviceApiFp(configuration).devicePrototypeGetPoints(id,filter,options)(fetch,basePath);},/**\n         *\n         * @summary Retrieve readings for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetReadings:function devicePrototypeGetReadings(id,filter,options){return DeviceApiFp(configuration).devicePrototypeGetReadings(id,filter,options)(fetch,basePath);},/**\n         *\n         * @summary Get safe-zone for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetSafeZone:function devicePrototypeGetSafeZone(id,options){return DeviceApiFp(configuration).devicePrototypeGetSafeZone(id,options)(fetch,basePath);},/**\n         *\n         * @summary Queries transients of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeGetTransients:function devicePrototypeGetTransients(id,filter,options){return DeviceApiFp(configuration).devicePrototypeGetTransients(id,filter,options)(fetch,basePath);},/**\n         *\n         * @param {number} id device id\n         * @param {string} nearbyId\n         * @param {string} dateRange\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeNearbyDeviceData:function devicePrototypeNearbyDeviceData(id,nearbyId,dateRange,options){return DeviceApiFp(configuration).devicePrototypeNearbyDeviceData(id,nearbyId,dateRange,options)(fetch,basePath);},/**\n         *\n         * @param {number} id device id\n         * @param {string} [dateRange]\n         * @param {string} [correlationId]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeNearbyDevices:function devicePrototypeNearbyDevices(id,dateRange,correlationId,options){return DeviceApiFp(configuration).devicePrototypeNearbyDevices(id,dateRange,correlationId,options)(fetch,basePath);},/**\n         *\n         * @summary Update safe-zone for device\n         * @param {number} id device id\n         * @param {Array<GeoPoint>} data Array of {lat:x,lng:y} points denoting the vertices of the safe-zone\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeSetSafeZone:function devicePrototypeSetSafeZone(id,data,options){return DeviceApiFp(configuration).devicePrototypeSetSafeZone(id,data,options)(fetch,basePath);},/**\n         *\n         * @summary Update a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateByIdGatewayReadings:function devicePrototypeUpdateByIdGatewayReadings(id,fk,data,options){return DeviceApiFp(configuration).devicePrototypeUpdateByIdGatewayReadings(id,fk,data,options)(fetch,basePath);},/**\n         *\n         * @summary Update an alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateByIdNotificationTriggers:function devicePrototypeUpdateByIdNotificationTriggers(id,fk,data,options){return DeviceApiFp(configuration).devicePrototypeUpdateByIdNotificationTriggers(id,fk,data,options)(fetch,basePath);},/**\n         *\n         * @summary Update a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {DeviceTransient} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateByIdTransients:function devicePrototypeUpdateByIdTransients(id,fk,data,options){return DeviceApiFp(configuration).devicePrototypeUpdateByIdTransients(id,fk,data,options)(fetch,basePath);},/**\n         *\n         * @summary Update configuration for a device\n         * @param {number} id device id\n         * @param {DeviceConfig} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */devicePrototypeUpdateConfig:function devicePrototypeUpdateConfig(id,data,options){return DeviceApiFp(configuration).devicePrototypeUpdateConfig(id,data,options)(fetch,basePath);}};};/**\n * DeviceApi - object-oriented interface\n * @export\n * @class DeviceApi\n * @extends {BaseAPI}\n */export var DeviceApi=/*#__PURE__*/function(_BaseAPI){_inherits(DeviceApi,_BaseAPI);var _super2=_createSuper(DeviceApi);function DeviceApi(){_classCallCheck(this,DeviceApi);return _super2.apply(this,arguments);}_createClass(DeviceApi,[{key:\"deviceFindById\",/**\n     *\n     * @summary Find a model instance by {{id}} from the data source.\n     * @param {string} id Model id\n     * @param {string} [filter] Filter defining fields and include - must be a JSON-encoded string ({\\&quot;something\\&quot;:\\&quot;value\\&quot;})\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */value:function deviceFindById(id,filter,options){return DeviceApiFp(this.configuration).deviceFindById(id,filter,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Creates a new instance in gatewayReadings of this model.\n     * @param {number} id device id\n     * @param {SensorReading} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeCreateGatewayReadings\",value:function devicePrototypeCreateGatewayReadings(id,data,options){return DeviceApiFp(this.configuration).devicePrototypeCreateGatewayReadings(id,data,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Creates a new instance in messages of this model.\n     * @param {number} id device id\n     * @param {DeviceMessage} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeCreateMessages\",value:function devicePrototypeCreateMessages(id,data,options){return DeviceApiFp(this.configuration).devicePrototypeCreateMessages(id,data,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Create alert/notification trigger for device\n     * @param {number} id device id\n     * @param {NotificationTrigger} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeCreateNotificationTriggers\",value:function devicePrototypeCreateNotificationTriggers(id,data,options){return DeviceApiFp(this.configuration).devicePrototypeCreateNotificationTriggers(id,data,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Deletes all gatewayReadings of this model.\n     * @param {number} id device id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeDeleteGatewayReadings\",value:function devicePrototypeDeleteGatewayReadings(id,options){return DeviceApiFp(this.configuration).devicePrototypeDeleteGatewayReadings(id,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Deletes all messages of this model.\n     * @param {number} id device id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeDeleteMessages\",value:function devicePrototypeDeleteMessages(id,options){return DeviceApiFp(this.configuration).devicePrototypeDeleteMessages(id,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Remove all alert/notification trigger for device\n     * @param {number} id device id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeDeleteNotificationTriggers\",value:function devicePrototypeDeleteNotificationTriggers(id,options){return DeviceApiFp(this.configuration).devicePrototypeDeleteNotificationTriggers(id,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Delete a related item by id for gatewayReadings.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for gatewayReadings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeDestroyByIdGatewayReadings\",value:function devicePrototypeDestroyByIdGatewayReadings(id,fk,options){return DeviceApiFp(this.configuration).devicePrototypeDestroyByIdGatewayReadings(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Remove alert/notification trigger by id {fk} for device\n     * @param {number} id device id\n     * @param {number} fk Foreign key for notificationTriggers\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeDestroyByIdNotificationTriggers\",value:function devicePrototypeDestroyByIdNotificationTriggers(id,fk,options){return DeviceApiFp(this.configuration).devicePrototypeDestroyByIdNotificationTriggers(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Delete a specific point for a device\n     * @param {number} id device id\n     * @param {number} fk Foreign key for points\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeDestroyByIdPoints\",value:function devicePrototypeDestroyByIdPoints(id,fk,options){return DeviceApiFp(this.configuration).devicePrototypeDestroyByIdPoints(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Delete a related item by id for transients.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for transients\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeDestroyByIdTransients\",value:function devicePrototypeDestroyByIdTransients(id,fk,options){return DeviceApiFp(this.configuration).devicePrototypeDestroyByIdTransients(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Find a related item by id for gatewayReadings.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for gatewayReadings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeFindByIdGatewayReadings\",value:function devicePrototypeFindByIdGatewayReadings(id,fk,options){return DeviceApiFp(this.configuration).devicePrototypeFindByIdGatewayReadings(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Find a related item by id for notificationTriggers.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for notificationTriggers\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeFindByIdNotificationTriggers\",value:function devicePrototypeFindByIdNotificationTriggers(id,fk,options){return DeviceApiFp(this.configuration).devicePrototypeFindByIdNotificationTriggers(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Retrieve a specific point for a device\n     * @param {number} id device id\n     * @param {number} fk Foreign key for points\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeFindByIdPoints\",value:function devicePrototypeFindByIdPoints(id,fk,options){return DeviceApiFp(this.configuration).devicePrototypeFindByIdPoints(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Retrieve a specific reading for a device\n     * @param {number} id device id\n     * @param {number} fk Foreign key for readings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeFindByIdReadings\",value:function devicePrototypeFindByIdReadings(id,fk,options){return DeviceApiFp(this.configuration).devicePrototypeFindByIdReadings(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Find a related item by id for transients.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for transients\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeFindByIdTransients\",value:function devicePrototypeFindByIdTransients(id,fk,options){return DeviceApiFp(this.configuration).devicePrototypeFindByIdTransients(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @param {number} id device id\n     * @param {number} duration How long to go into flightMode, in minutes\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeFlightMode\",value:function devicePrototypeFlightMode(id,duration,options){return DeviceApiFp(this.configuration).devicePrototypeFlightMode(id,duration,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Retrieve configuration for a device\n     * @param {number} id device id\n     * @param {boolean} [refresh] unused\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeGetConfig\",value:function devicePrototypeGetConfig(id,refresh,options){return DeviceApiFp(this.configuration).devicePrototypeGetConfig(id,refresh,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Queries gatewayReadings of device.\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeGetGatewayReadings\",value:function devicePrototypeGetGatewayReadings(id,filter,options){return DeviceApiFp(this.configuration).devicePrototypeGetGatewayReadings(id,filter,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Queries messages of device.\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeGetMessages\",value:function devicePrototypeGetMessages(id,filter,options){return DeviceApiFp(this.configuration).devicePrototypeGetMessages(id,filter,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Get alerts for device\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeGetNotificationTriggers\",value:function devicePrototypeGetNotificationTriggers(id,filter,options){return DeviceApiFp(this.configuration).devicePrototypeGetNotificationTriggers(id,filter,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Retrieve points for a device\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeGetPoints\",value:function devicePrototypeGetPoints(id,filter,options){return DeviceApiFp(this.configuration).devicePrototypeGetPoints(id,filter,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Retrieve readings for a device\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeGetReadings\",value:function devicePrototypeGetReadings(id,filter,options){return DeviceApiFp(this.configuration).devicePrototypeGetReadings(id,filter,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Get safe-zone for device\n     * @param {number} id device id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeGetSafeZone\",value:function devicePrototypeGetSafeZone(id,options){return DeviceApiFp(this.configuration).devicePrototypeGetSafeZone(id,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Queries transients of device.\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeGetTransients\",value:function devicePrototypeGetTransients(id,filter,options){return DeviceApiFp(this.configuration).devicePrototypeGetTransients(id,filter,options)(this.fetch,this.basePath);}/**\n     *\n     * @param {number} id device id\n     * @param {string} nearbyId\n     * @param {string} dateRange\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeNearbyDeviceData\",value:function devicePrototypeNearbyDeviceData(id,nearbyId,dateRange,options){return DeviceApiFp(this.configuration).devicePrototypeNearbyDeviceData(id,nearbyId,dateRange,options)(this.fetch,this.basePath);}/**\n     *\n     * @param {number} id device id\n     * @param {string} [dateRange]\n     * @param {string} [correlationId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeNearbyDevices\",value:function devicePrototypeNearbyDevices(id,dateRange,correlationId,options){return DeviceApiFp(this.configuration).devicePrototypeNearbyDevices(id,dateRange,correlationId,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Update safe-zone for device\n     * @param {number} id device id\n     * @param {Array<GeoPoint>} data Array of {lat:x,lng:y} points denoting the vertices of the safe-zone\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeSetSafeZone\",value:function devicePrototypeSetSafeZone(id,data,options){return DeviceApiFp(this.configuration).devicePrototypeSetSafeZone(id,data,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Update a related item by id for gatewayReadings.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for gatewayReadings\n     * @param {SensorReading} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeUpdateByIdGatewayReadings\",value:function devicePrototypeUpdateByIdGatewayReadings(id,fk,data,options){return DeviceApiFp(this.configuration).devicePrototypeUpdateByIdGatewayReadings(id,fk,data,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Update an alert/notification trigger by id {fk} for device\n     * @param {number} id device id\n     * @param {number} fk Foreign key for notificationTriggers\n     * @param {NotificationTrigger} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeUpdateByIdNotificationTriggers\",value:function devicePrototypeUpdateByIdNotificationTriggers(id,fk,data,options){return DeviceApiFp(this.configuration).devicePrototypeUpdateByIdNotificationTriggers(id,fk,data,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Update a related item by id for transients.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for transients\n     * @param {DeviceTransient} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeUpdateByIdTransients\",value:function devicePrototypeUpdateByIdTransients(id,fk,data,options){return DeviceApiFp(this.configuration).devicePrototypeUpdateByIdTransients(id,fk,data,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Update configuration for a device\n     * @param {number} id device id\n     * @param {DeviceConfig} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */},{key:\"devicePrototypeUpdateConfig\",value:function devicePrototypeUpdateConfig(id,data,options){return DeviceApiFp(this.configuration).devicePrototypeUpdateConfig(id,data,options)(this.fetch,this.basePath);}}]);return DeviceApi;}(BaseAPI);/**\n * UserApi - fetch parameter creator\n * @export\n */export var UserApiFetchParamCreator=function UserApiFetchParamCreator(configuration){return{/**\n         *\n         * @summary Login a user with username/email and password.\n         * @param {Credentials} credentials Body (JSON)\n         * @param {string} [include] Related objects to include in the response. See the description of return value for more details.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userLogin:function userLogin(credentials,include){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'credentials' is not null or undefined\nif(credentials===null||credentials===undefined){throw new RequiredError('credentials','Required parameter credentials was null or undefined when calling userLogin.');}var localVarPath=\"/users/login\";var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'POST'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(include!==undefined){localVarQueryParameter['include']=include;}localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"Credentials\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(credentials||{}):credentials||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Creates a new instance in geofences of this model.\n         * @param {string} id user id\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeCreateGeofences:function userPrototypeCreateGeofences(id,data){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling userPrototypeCreateGeofences.');}var localVarPath=\"/users/{id}/geofences\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'POST'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"Geofence\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(data||{}):data||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Deletes all geofences of this model.\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeDeleteGeofences:function userPrototypeDeleteGeofences(id){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling userPrototypeDeleteGeofences.');}var localVarPath=\"/users/{id}/geofences\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'DELETE'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Delete a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeDestroyByIdGeofences:function userPrototypeDestroyByIdGeofences(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling userPrototypeDestroyByIdGeofences.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling userPrototypeDestroyByIdGeofences.');}var localVarPath=\"/users/{id}/geofences/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'DELETE'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Find a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeFindByIdGeofences:function userPrototypeFindByIdGeofences(id,fk){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling userPrototypeFindByIdGeofences.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling userPrototypeFindByIdGeofences.');}var localVarPath=\"/users/{id}/geofences/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Retrieve a summary of all devices on this user account.\n         * @param {string} id user id\n         * @param {string} [pointCount] Maximum number of points to return per device. Default 5.\n         * @param {string} [dateRange] What date range to consider when retrieving recent points. Typical use is [TimeOfLastPointDownload, NOW]. Defaults to all time.\n         * @param {string} [hideApprox] Don&#39;t include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetDeviceSummary:function userPrototypeGetDeviceSummary(id,pointCount,dateRange,hideApprox){var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling userPrototypeGetDeviceSummary.');}var localVarPath=\"/users/{id}/getDeviceSummary\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(pointCount!==undefined){localVarQueryParameter['pointCount']=pointCount;}if(dateRange!==undefined){localVarQueryParameter['dateRange']=dateRange;}if(hideApprox!==undefined){localVarQueryParameter['hideApprox']=hideApprox;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Queries devices of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetDevices:function userPrototypeGetDevices(id,filter){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling userPrototypeGetDevices.');}var localVarPath=\"/users/{id}/devices\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(filter!==undefined){localVarQueryParameter['filter']=filter;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Retrieve a list of devices in any given zone or group of zones.\n         * @param {string} id user id\n         * @param {string} [zoneId] ID of geofence to search. zoneId or zoneType required.\n         * @param {string} [zoneType] Type of zones to search. Ignored if zoneId is specified. zoneId or zoneType required.\n         * @param {string} [includeApprox] Include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetDevicesInZone:function userPrototypeGetDevicesInZone(id,zoneId,zoneType,includeApprox){var options=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling userPrototypeGetDevicesInZone.');}var localVarPath=\"/users/{id}/getDevicesInZone\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(zoneId!==undefined){localVarQueryParameter['zoneId']=zoneId;}if(zoneType!==undefined){localVarQueryParameter['zoneType']=zoneType;}if(includeApprox!==undefined){localVarQueryParameter['includeApprox']=includeApprox;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Queries geofences of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetGeofences:function userPrototypeGetGeofences(id,filter){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling userPrototypeGetGeofences.');}var localVarPath=\"/users/{id}/geofences\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};if(filter!==undefined){localVarQueryParameter['filter']=filter;}localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetMqttCredentials:function userPrototypeGetMqttCredentials(id){var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling userPrototypeGetMqttCredentials.');}var localVarPath=\"/users/{id}/getMqttCredentials\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'GET'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);return{url:url.format(localVarUrlObj),options:localVarRequestOptions};},/**\n         *\n         * @summary Update a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeUpdateByIdGeofences:function userPrototypeUpdateByIdGeofences(id,fk,data){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};// verify required parameter 'id' is not null or undefined\nif(id===null||id===undefined){throw new RequiredError('id','Required parameter id was null or undefined when calling userPrototypeUpdateByIdGeofences.');}// verify required parameter 'fk' is not null or undefined\nif(fk===null||fk===undefined){throw new RequiredError('fk','Required parameter fk was null or undefined when calling userPrototypeUpdateByIdGeofences.');}var localVarPath=\"/users/{id}/geofences/{fk}\".replace(\"{\".concat(\"id\",\"}\"),encodeURIComponent(String(id))).replace(\"{\".concat(\"fk\",\"}\"),encodeURIComponent(String(fk)));var localVarUrlObj=url.parse(localVarPath,true);var localVarRequestOptions=Object.assign({method:'PUT'},options);var localVarHeaderParameter={\"Authorization\":configuration===null||configuration===void 0?void 0:configuration.accessToken};var localVarQueryParameter={};localVarHeaderParameter['Content-Type']='application/json';localVarUrlObj.query=Object.assign({},localVarUrlObj.query,localVarQueryParameter,options.query);// fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\nlocalVarUrlObj.search=undefined;localVarRequestOptions.headers=Object.assign({},localVarHeaderParameter,options.headers);var needsSerialization=\"Geofence\"!==\"string\"||localVarRequestOptions.headers['Content-Type']==='application/json';localVarRequestOptions.body=needsSerialization?JSON.stringify(data||{}):data||\"\";return{url:url.format(localVarUrlObj),options:localVarRequestOptions};}};};/**\n * UserApi - functional programming interface\n * @export\n */export var UserApiFp=function UserApiFp(configuration){return{/**\n         *\n         * @summary Login a user with username/email and password.\n         * @param {Credentials} credentials Body (JSON)\n         * @param {string} [include] Related objects to include in the response. See the description of return value for more details.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userLogin:function userLogin(credentials,include,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userLogin(credentials,include,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Creates a new instance in geofences of this model.\n         * @param {string} id user id\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeCreateGeofences:function userPrototypeCreateGeofences(id,data,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userPrototypeCreateGeofences(id,data,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Deletes all geofences of this model.\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeDeleteGeofences:function userPrototypeDeleteGeofences(id,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userPrototypeDeleteGeofences(id,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response;}else{throw response;}});};},/**\n         *\n         * @summary Delete a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeDestroyByIdGeofences:function userPrototypeDestroyByIdGeofences(id,fk,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userPrototypeDestroyByIdGeofences(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response;}else{throw response;}});};},/**\n         *\n         * @summary Find a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeFindByIdGeofences:function userPrototypeFindByIdGeofences(id,fk,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userPrototypeFindByIdGeofences(id,fk,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Retrieve a summary of all devices on this user account.\n         * @param {string} id user id\n         * @param {string} [pointCount] Maximum number of points to return per device. Default 5.\n         * @param {string} [dateRange] What date range to consider when retrieving recent points. Typical use is [TimeOfLastPointDownload, NOW]. Defaults to all time.\n         * @param {string} [hideApprox] Don&#39;t include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetDeviceSummary:function userPrototypeGetDeviceSummary(id,pointCount,dateRange,hideApprox,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userPrototypeGetDeviceSummary(id,pointCount,dateRange,hideApprox,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Queries devices of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetDevices:function userPrototypeGetDevices(id,filter,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userPrototypeGetDevices(id,filter,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Retrieve a list of devices in any given zone or group of zones.\n         * @param {string} id user id\n         * @param {string} [zoneId] ID of geofence to search. zoneId or zoneType required.\n         * @param {string} [zoneType] Type of zones to search. Ignored if zoneId is specified. zoneId or zoneType required.\n         * @param {string} [includeApprox] Include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetDevicesInZone:function userPrototypeGetDevicesInZone(id,zoneId,zoneType,includeApprox,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userPrototypeGetDevicesInZone(id,zoneId,zoneType,includeApprox,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Queries geofences of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetGeofences:function userPrototypeGetGeofences(id,filter,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userPrototypeGetGeofences(id,filter,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetMqttCredentials:function userPrototypeGetMqttCredentials(id,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userPrototypeGetMqttCredentials(id,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};},/**\n         *\n         * @summary Update a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeUpdateByIdGeofences:function userPrototypeUpdateByIdGeofences(id,fk,data,options){var localVarFetchArgs=UserApiFetchParamCreator(configuration).userPrototypeUpdateByIdGeofences(id,fk,data,options);return function(){var fetch=arguments.length>0&&arguments[0]!==undefined?arguments[0]:portableFetch;var basePath=arguments.length>1&&arguments[1]!==undefined?arguments[1]:BASE_PATH;return fetch(basePath+localVarFetchArgs.url,localVarFetchArgs.options).then(function(response){if(response.status>=200&&response.status<300){return response.json();}else{throw response;}});};}};};/**\n * UserApi - factory interface\n * @export\n */export var UserApiFactory=function UserApiFactory(configuration,fetch,basePath){return{/**\n         *\n         * @summary Login a user with username/email and password.\n         * @param {Credentials} credentials Body (JSON)\n         * @param {string} [include] Related objects to include in the response. See the description of return value for more details.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userLogin:function userLogin(credentials,include,options){return UserApiFp(configuration).userLogin(credentials,include,options)(fetch,basePath);},/**\n         *\n         * @summary Creates a new instance in geofences of this model.\n         * @param {string} id user id\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeCreateGeofences:function userPrototypeCreateGeofences(id,data,options){return UserApiFp(configuration).userPrototypeCreateGeofences(id,data,options)(fetch,basePath);},/**\n         *\n         * @summary Deletes all geofences of this model.\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeDeleteGeofences:function userPrototypeDeleteGeofences(id,options){return UserApiFp(configuration).userPrototypeDeleteGeofences(id,options)(fetch,basePath);},/**\n         *\n         * @summary Delete a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeDestroyByIdGeofences:function userPrototypeDestroyByIdGeofences(id,fk,options){return UserApiFp(configuration).userPrototypeDestroyByIdGeofences(id,fk,options)(fetch,basePath);},/**\n         *\n         * @summary Find a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeFindByIdGeofences:function userPrototypeFindByIdGeofences(id,fk,options){return UserApiFp(configuration).userPrototypeFindByIdGeofences(id,fk,options)(fetch,basePath);},/**\n         *\n         * @summary Retrieve a summary of all devices on this user account.\n         * @param {string} id user id\n         * @param {string} [pointCount] Maximum number of points to return per device. Default 5.\n         * @param {string} [dateRange] What date range to consider when retrieving recent points. Typical use is [TimeOfLastPointDownload, NOW]. Defaults to all time.\n         * @param {string} [hideApprox] Don&#39;t include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetDeviceSummary:function userPrototypeGetDeviceSummary(id,pointCount,dateRange,hideApprox,options){return UserApiFp(configuration).userPrototypeGetDeviceSummary(id,pointCount,dateRange,hideApprox,options)(fetch,basePath);},/**\n         *\n         * @summary Queries devices of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetDevices:function userPrototypeGetDevices(id,filter,options){return UserApiFp(configuration).userPrototypeGetDevices(id,filter,options)(fetch,basePath);},/**\n         *\n         * @summary Retrieve a list of devices in any given zone or group of zones.\n         * @param {string} id user id\n         * @param {string} [zoneId] ID of geofence to search. zoneId or zoneType required.\n         * @param {string} [zoneType] Type of zones to search. Ignored if zoneId is specified. zoneId or zoneType required.\n         * @param {string} [includeApprox] Include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetDevicesInZone:function userPrototypeGetDevicesInZone(id,zoneId,zoneType,includeApprox,options){return UserApiFp(configuration).userPrototypeGetDevicesInZone(id,zoneId,zoneType,includeApprox,options)(fetch,basePath);},/**\n         *\n         * @summary Queries geofences of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetGeofences:function userPrototypeGetGeofences(id,filter,options){return UserApiFp(configuration).userPrototypeGetGeofences(id,filter,options)(fetch,basePath);},/**\n         *\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeGetMqttCredentials:function userPrototypeGetMqttCredentials(id,options){return UserApiFp(configuration).userPrototypeGetMqttCredentials(id,options)(fetch,basePath);},/**\n         *\n         * @summary Update a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */userPrototypeUpdateByIdGeofences:function userPrototypeUpdateByIdGeofences(id,fk,data,options){return UserApiFp(configuration).userPrototypeUpdateByIdGeofences(id,fk,data,options)(fetch,basePath);}};};/**\n * UserApi - object-oriented interface\n * @export\n * @class UserApi\n * @extends {BaseAPI}\n */export var UserApi=/*#__PURE__*/function(_BaseAPI2){_inherits(UserApi,_BaseAPI2);var _super3=_createSuper(UserApi);function UserApi(){_classCallCheck(this,UserApi);return _super3.apply(this,arguments);}_createClass(UserApi,[{key:\"userLogin\",/**\n     *\n     * @summary Login a user with username/email and password.\n     * @param {Credentials} credentials Body (JSON)\n     * @param {string} [include] Related objects to include in the response. See the description of return value for more details.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */value:function userLogin(credentials,include,options){return UserApiFp(this.configuration).userLogin(credentials,include,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Creates a new instance in geofences of this model.\n     * @param {string} id user id\n     * @param {Geofence} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */},{key:\"userPrototypeCreateGeofences\",value:function userPrototypeCreateGeofences(id,data,options){return UserApiFp(this.configuration).userPrototypeCreateGeofences(id,data,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Deletes all geofences of this model.\n     * @param {string} id user id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */},{key:\"userPrototypeDeleteGeofences\",value:function userPrototypeDeleteGeofences(id,options){return UserApiFp(this.configuration).userPrototypeDeleteGeofences(id,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Delete a related item by id for geofences.\n     * @param {string} id user id\n     * @param {number} fk Foreign key for geofences\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */},{key:\"userPrototypeDestroyByIdGeofences\",value:function userPrototypeDestroyByIdGeofences(id,fk,options){return UserApiFp(this.configuration).userPrototypeDestroyByIdGeofences(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Find a related item by id for geofences.\n     * @param {string} id user id\n     * @param {number} fk Foreign key for geofences\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */},{key:\"userPrototypeFindByIdGeofences\",value:function userPrototypeFindByIdGeofences(id,fk,options){return UserApiFp(this.configuration).userPrototypeFindByIdGeofences(id,fk,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Retrieve a summary of all devices on this user account.\n     * @param {string} id user id\n     * @param {string} [pointCount] Maximum number of points to return per device. Default 5.\n     * @param {string} [dateRange] What date range to consider when retrieving recent points. Typical use is [TimeOfLastPointDownload, NOW]. Defaults to all time.\n     * @param {string} [hideApprox] Don&#39;t include GSM / poor accuracy locations. Default to false.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */},{key:\"userPrototypeGetDeviceSummary\",value:function userPrototypeGetDeviceSummary(id,pointCount,dateRange,hideApprox,options){return UserApiFp(this.configuration).userPrototypeGetDeviceSummary(id,pointCount,dateRange,hideApprox,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Queries devices of user.\n     * @param {string} id user id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */},{key:\"userPrototypeGetDevices\",value:function userPrototypeGetDevices(id,filter,options){return UserApiFp(this.configuration).userPrototypeGetDevices(id,filter,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Retrieve a list of devices in any given zone or group of zones.\n     * @param {string} id user id\n     * @param {string} [zoneId] ID of geofence to search. zoneId or zoneType required.\n     * @param {string} [zoneType] Type of zones to search. Ignored if zoneId is specified. zoneId or zoneType required.\n     * @param {string} [includeApprox] Include GSM / poor accuracy locations. Default to false.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */},{key:\"userPrototypeGetDevicesInZone\",value:function userPrototypeGetDevicesInZone(id,zoneId,zoneType,includeApprox,options){return UserApiFp(this.configuration).userPrototypeGetDevicesInZone(id,zoneId,zoneType,includeApprox,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Queries geofences of user.\n     * @param {string} id user id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */},{key:\"userPrototypeGetGeofences\",value:function userPrototypeGetGeofences(id,filter,options){return UserApiFp(this.configuration).userPrototypeGetGeofences(id,filter,options)(this.fetch,this.basePath);}/**\n     *\n     * @param {string} id user id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */},{key:\"userPrototypeGetMqttCredentials\",value:function userPrototypeGetMqttCredentials(id,options){return UserApiFp(this.configuration).userPrototypeGetMqttCredentials(id,options)(this.fetch,this.basePath);}/**\n     *\n     * @summary Update a related item by id for geofences.\n     * @param {string} id user id\n     * @param {number} fk Foreign key for geofences\n     * @param {Geofence} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */},{key:\"userPrototypeUpdateByIdGeofences\",value:function userPrototypeUpdateByIdGeofences(id,fk,data,options){return UserApiFp(this.configuration).userPrototypeUpdateByIdGeofences(id,fk,data,options)(this.fetch,this.basePath);}}]);return UserApi;}(BaseAPI);","map":{"version":3,"sources":["/Users/nastassianguyen/Desktop/proj/EagleTracker/src/lb-api/api.ts"],"names":["url","portableFetch","BASE_PATH","replace","COLLECTION_FORMATS","csv","ssv","tsv","pipes","BaseAPI","configuration","basePath","fetch","RequiredError","field","msg","name","Error","DeviceApiFetchParamCreator","deviceFindById","id","filter","options","undefined","localVarPath","encodeURIComponent","String","localVarUrlObj","parse","localVarRequestOptions","Object","assign","method","localVarHeaderParameter","accessToken","localVarQueryParameter","query","search","headers","format","devicePrototypeCreateGatewayReadings","data","needsSerialization","body","JSON","stringify","devicePrototypeCreateMessages","devicePrototypeCreateNotificationTriggers","devicePrototypeDeleteGatewayReadings","devicePrototypeDeleteMessages","devicePrototypeDeleteNotificationTriggers","devicePrototypeDestroyByIdGatewayReadings","fk","devicePrototypeDestroyByIdNotificationTriggers","devicePrototypeDestroyByIdPoints","devicePrototypeDestroyByIdTransients","devicePrototypeFindByIdGatewayReadings","devicePrototypeFindByIdNotificationTriggers","devicePrototypeFindByIdPoints","devicePrototypeFindByIdReadings","devicePrototypeFindByIdTransients","devicePrototypeFlightMode","duration","devicePrototypeGetConfig","refresh","devicePrototypeGetGatewayReadings","devicePrototypeGetMessages","devicePrototypeGetNotificationTriggers","devicePrototypeGetPoints","devicePrototypeGetReadings","devicePrototypeGetSafeZone","devicePrototypeGetTransients","devicePrototypeNearbyDeviceData","nearbyId","dateRange","devicePrototypeNearbyDevices","correlationId","devicePrototypeSetSafeZone","devicePrototypeUpdateByIdGatewayReadings","devicePrototypeUpdateByIdNotificationTriggers","devicePrototypeUpdateByIdTransients","devicePrototypeUpdateConfig","DeviceApiFp","localVarFetchArgs","then","response","status","json","DeviceApiFactory","DeviceApi","UserApiFetchParamCreator","userLogin","credentials","include","userPrototypeCreateGeofences","userPrototypeDeleteGeofences","userPrototypeDestroyByIdGeofences","userPrototypeFindByIdGeofences","userPrototypeGetDeviceSummary","pointCount","hideApprox","userPrototypeGetDevices","userPrototypeGetDevicesInZone","zoneId","zoneType","includeApprox","userPrototypeGetGeofences","userPrototypeGetMqttCredentials","userPrototypeUpdateByIdGeofences","UserApiFp","UserApiFactory","UserApi"],"mappings":"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","sourcesContent":["/// <reference path=\"./custom.d.ts\" />\n// tslint:disable\n/**\n * TrackingAPI\n * API for retrieving tracking data and changing settings on LightBug & RemoteThings tracking devices\n *\n * OpenAPI spec version: 1.1.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n\nimport * as url from \"url\";\nimport * as portableFetch from \"portable-fetch\";\nimport {Configuration} from \"./configuration\";\n\nconst BASE_PATH = \"https://api.thelightbug.com/api\".replace(/\\/+$/, \"\");\n\n/**\n *\n * @export\n */\nexport const COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n\n/**\n *\n * @export\n * @interface FetchAPI\n */\nexport interface FetchAPI {\n    (url: string, init?: any): Promise<Response>;\n}\n\n/**\n *\n * @export\n * @interface FetchArgs\n */\nexport interface FetchArgs {\n    url: string;\n    options: any;\n}\n\n/**\n *\n * @export\n * @class BaseAPI\n */\nexport class BaseAPI {\n    protected configuration: Configuration;\n\n    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected fetch: FetchAPI = portableFetch) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n    }\n};\n\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nexport class RequiredError extends Error {\n    name: \"RequiredError\"\n\n    constructor(public field: string, msg?: string) {\n        super(msg);\n    }\n}\n\n/**\n *\n * @export\n * @interface AccessToken\n */\nexport interface AccessToken {\n    /**\n     *\n     * @type {string}\n     * @memberof AccessToken\n     */\n    id: string;\n    /**\n     * time to live in seconds (2 weeks by default)\n     * @type {number}\n     * @memberof AccessToken\n     */\n    ttl?: number;\n    /**\n     * Array of scopes granted to this access token.\n     * @type {Array<string>}\n     * @memberof AccessToken\n     */\n    scopes?: Array<string>;\n    /**\n     *\n     * @type {Date}\n     * @memberof AccessToken\n     */\n    created?: Date;\n    /**\n     *\n     * @type {number}\n     * @memberof AccessToken\n     */\n    userId?: number;\n}\n\n/**\n *\n * @export\n * @interface Credentials\n */\nexport interface Credentials {\n    /**\n     *\n     * @type {string}\n     * @memberof Credentials\n     */\n    username?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Credentials\n     */\n    password?: string;\n}\n\n/**\n *\n * @export\n * @interface Datapoint\n */\nexport interface Datapoint {\n    /**\n     *\n     * @type {GeoPoint}\n     * @memberof Datapoint\n     */\n    location?: GeoPoint;\n    /**\n     * Timestamp for the datapoint. NB this is not necessarily the same as 'created'\n     * @type {Date}\n     * @memberof Datapoint\n     */\n    timestamp: Date;\n    /**\n     * Ground velocity in kmh, as determined by the GPS\n     * @type {number}\n     * @memberof Datapoint\n     */\n    speed?: number;\n    /**\n     * Altitude in m, as determined by the GPS\n     * @type {number}\n     * @memberof Datapoint\n     */\n    altitude?: number;\n    /**\n     * Course in degrees, as determined by the GPS\n     * @type {number}\n     * @memberof Datapoint\n     */\n    course?: number;\n    /**\n     * Internal use only\n     * @type {string}\n     * @memberof Datapoint\n     */\n    numValue?: string;\n    /**\n     * Internal use only\n     * @type {string}\n     * @memberof Datapoint\n     */\n    stringValue?: string;\n    /**\n     * Bitfield indicating reason for datapoint transmission and status of the device at the time.   Bit1(1): Wake mode active,    Bit2(2): Sleep mode active,    Bit3(4): Bluetooth disconnected,    Bit4(8): Outside of Safe-zone,    Bit5(16): Motion detected,    Bit6(32): Device started moving,    Bit7(64): Device stopped moving,    Bit8(128): Position is stale: last known location was used   Special case 255/0xFF: device was checking in with server. Ignore all data\n     * @type {number}\n     * @memberof Datapoint\n     */\n    sendReason?: number;\n    /**\n     * Number of visible satellites, as determined by the GPS\n     * @type {number}\n     * @memberof Datapoint\n     */\n    sats?: number;\n    /**\n     * Deprecated\n     * @type {number}\n     * @memberof Datapoint\n     */\n    hdop?: number;\n    /**\n     * Accuracy of the location in meters\n     * @type {number}\n     * @memberof Datapoint\n     */\n    accuracy?: number;\n    /**\n     * Type of position. Can be 'gps', 'wifi', 'gsm' or 'invalid'\n     * @type {string}\n     * @memberof Datapoint\n     */\n    locationType: string;\n    /**\n     * Battery charge level in volts.\n     * @type {number}\n     * @memberof Datapoint\n     */\n    batteryVoltage?: number;\n    /**\n     * Internal Use. 255 indicates plugged in and charging.\n     * @type {number}\n     * @memberof Datapoint\n     */\n    averageCharge?: number;\n    /**\n     * Timestamp for when the datapoint was received and processed by the server\n     * @type {Date}\n     * @memberof Datapoint\n     */\n    created: Date;\n    /**\n     * A reverse geocode result for the point\n     * @type {string}\n     * @memberof Datapoint\n     */\n    address?: string;\n    /**\n     * Bitfield indicating what alerts where active at transmission time   Bit1(1): Freefall / Drop detected,    Bit2(2): Rotation detected,    Bit3(4): GSM jamming detected,    Bit4(8): Button was pressed,    Bit5(16): Generic Alert\n     * @type {number}\n     * @memberof Datapoint\n     */\n    alertType?: number;\n    /**\n     * Current Used to send this location in microAmp Hours\n     * @type {number}\n     * @memberof Datapoint\n     */\n    currentUsed?: number;\n    /**\n     * GSM CSQ value\n     * @type {number}\n     * @memberof Datapoint\n     */\n    gsmSignal?: number;\n    /**\n     * Internal use - correlation identifier\n     * @type {string}\n     * @memberof Datapoint\n     */\n    correlationId?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof Datapoint\n     */\n    id?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Datapoint\n     */\n    deviceId?: number;\n}\n\n/**\n *\n * @export\n * @interface Device\n */\nexport interface Device {\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    imei?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    iccid?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof Device\n     */\n    loraId?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    imsi?: string;\n    /**\n     * Bluetooth MAC Address as 48bit number\n     * @type {number}\n     * @memberof Device\n     */\n    btMac?: number;\n    /**\n     * Bluetooth MAC Address in standard format\n     * @type {string}\n     * @memberof Device\n     */\n    btMacAddress?: string;\n    /**\n     * UWB Address as 32bit number\n     * @type {number}\n     * @memberof Device\n     */\n    uwbId?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    serial?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    type?: string;\n    /**\n     *\n     * @type {Date}\n     * @memberof Device\n     */\n    expires?: Date;\n    /**\n     *\n     * @type {Date}\n     * @memberof Device\n     */\n    lastConnection?: Date;\n    /**\n     *\n     * @type {Date}\n     * @memberof Device\n     */\n    firstSeen: Date;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    mode?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    name?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof Device\n     */\n    batteryVoltage?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    batteryType?: string;\n    /**\n     *\n     * @type {Array<string>}\n     * @memberof Device\n     */\n    tags?: Array<string>;\n    /**\n     * Indicates last known device state. 0 = awake, 1 = sleep, 6 = flight mode\n     * @type {number}\n     * @memberof Device\n     */\n    currentMode?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    color?: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof Device\n     */\n    saveToWeb?: boolean;\n    /**\n     *\n     * @type {boolean}\n     * @memberof Device\n     */\n    active?: boolean;\n    /**\n     *\n     * @type {boolean}\n     * @memberof Device\n     */\n    deepSleep?: boolean;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    simstate?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    stripeSubscription?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Device\n     */\n    subscriptionType?: string;\n    /**\n     *\n     * @type {any}\n     * @memberof Device\n     */\n    meta?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof Device\n     */\n    resellerId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Device\n     */\n    resellerPlanId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Device\n     */\n    id?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Device\n     */\n    ownerId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Device\n     */\n    securePhoneId?: number;\n}\n\n/**\n *\n * @export\n * @interface DeviceConfig\n */\nexport interface DeviceConfig {\n    /**\n     * Current Firmware version\n     * @type {string}\n     * @memberof DeviceConfig\n     */\n    currentFW?: string;\n    /**\n     * Pending Firmware version. If non null, the unit will be told to upgrade to this version when it next transmits in sleep mode.\n     * @type {string}\n     * @memberof DeviceConfig\n     */\n    otaFW?: string;\n    /**\n     * The wake mode interval in seconds. The unit will connect to the server this often when awake.\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    interval: number;\n    /**\n     * Sleep mode interval in seconds. The unit will try to connect this often to the server when asleep\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    sleepInterval: number;\n    /**\n     * DEPRECATED A failsafe to ensure the unit connects to the server at least this often.\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    checkInInterval?: number;\n    /**\n     * The number of GPS points to send with each transmission. A packing setting of 3 with an 'interval' of 60s will result in points recorded approximately every 20s, but they will only be sent together. This increases the time you have to wait for locations to come through to the server but improves battery life\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    packing: number;\n    /**\n     * Deprecated. See debounce.\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    movementSensitivity?: number;\n    /**\n     * Movement sensitivity on a scale of 1 to 10, with 1 being the most sensitive. It is correlated to the number of consecutive milliseconds the acceleration needs to exceed the movementSensitivity threshold\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    debounce?: number;\n    /**\n     * A secondary debounce value. Typically this value is lower or equal to debounce, representing increased sensitivity to movement once the device is already moving.\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    movementSensitivity2?: number;\n    /**\n     * Char Bitfield with various flags. Advanced use only.  DisableBluetooth:32 |  Encrypt:128 |  GsmOnWhenAwake:1 |  GsmOnWhenAsleep:2 |  GpsOnWhenAwake:4 |  DisableWifiAccuracyAssist:8 |  RepeatSleep:16 |  DisableWifi:64\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    behavior?: number;\n    /**\n     * Char Bitfield with various flags. Advanced use only.  StartStopOnly:1 |  LockAwakeOnAlert:2 |  SendSleepLocAfterBtDisconnect:4 |\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    modeControl?: number;\n    /**\n     * Char Bitfield with various flags. Advanced use only. FW >= 69.  SendStopImmediately:1 |  StopTimeoutIsInMinutes:2 |  HarshPowerBudget:4 |  Lock2G: 8\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    modeControl2?: number;\n    /**\n     * How long to let the GPS searches for a lock in seconds before giving up. Max 255s.\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    gpsTimeout?: number;\n    /**\n     * When the unit first wakes up from sleep, how long to wait before trying to transmit in multiples of 30 seconds. 0 = instant, 1 = 30s, 2 = 60s...   Useful to avoid detection or draining battery inside shielded buildings.\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    transmitTimeout?: number;\n    /**\n     * How long to let the GPS stabilise in seconds once a lock is achieved before sending the position. Higher values may increase accuracy.\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    gpsStabilize?: number;\n    /**\n     * If a safe-zone is used, how often to check the wifi & gps to see if its still inside it (only applies when motion is detected)\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    gpsCheckInterval?: number;\n    /**\n     * The total amount of time in seconds the unit has to be stationary for before deeming the journey over and switching to sleep mode\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    stopTimeout?: number;\n    /**\n     * Power budget in mAh per location update. Default 10, do not set lower than 5.\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    tolerancePercentage?: number;\n    /**\n     *\n     * @type {Array<any>}\n     * @memberof DeviceConfig\n     */\n    reasonsToWake?: Array<any>;\n    /**\n     * Set to any non null date to indicate the configuration should be pushed to the device when it next connects\n     * @type {Date}\n     * @memberof DeviceConfig\n     */\n    modified?: Date;\n    /**\n     * Internal use.   Used with otaFW. Set to true to force the unit to upgrade on next connection (rather than waiting for a sleep connection\n     * @type {boolean}\n     * @memberof DeviceConfig\n     */\n    forceFw?: boolean;\n    /**\n     * Indicates the last time the settings were sent to the device\n     * @type {Date}\n     * @memberof DeviceConfig\n     */\n    receivedAt?: Date;\n    /**\n     * Non NULL values cause unit to restart on next connection   0 = Normal reboot   1 = Clear settings cache and restart   2 = Clear cache and bluetooth connection data, then restart\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    reset?: number;\n    /**\n     * Internal use. Set to 0 when changing otaFW\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    flashTryCount?: number;\n    /**\n     * WiFi network name to use as a Safe-zone. When this network is visible, stay asleep\n     * @type {string}\n     * @memberof DeviceConfig\n     */\n    homeWifiNetwork?: string;\n    /**\n     * WiFi network paswword. If set enables transmission over WiFi.\n     * @type {string}\n     * @memberof DeviceConfig\n     */\n    homeWifiPassword?: string;\n    /**\n     * Internal Use Only. What to do when the unit wakes up (ie is moved and not in a safe-zone). Options are 'available' (lost and found), and 'normal' (tracking)\n     * @type {string}\n     * @memberof DeviceConfig\n     */\n    wakeAction: string;\n    /**\n     * Deprecated\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    onDemandTime: number;\n    /**\n     * What to do when the button is pressed or the unit is dropped. Options are 'available' (stay registered on the mobile network), 'nothing' (one transmission) and  'lockOn' (keep transmitting at 'interval' until instructed otherwise\n     * @type {string}\n     * @memberof DeviceConfig\n     */\n    alertAction: string;\n    /**\n     *\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    id?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    deviceId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof DeviceConfig\n     */\n    safeZoneId?: number;\n}\n\n/**\n *\n * @export\n * @interface DeviceMessage\n */\nexport interface DeviceMessage {\n    /**\n     *\n     * @type {string}\n     * @memberof DeviceMessage\n     */\n    config?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof DeviceMessage\n     */\n    message?: string;\n    /**\n     *\n     * @type {boolean}\n     * @memberof DeviceMessage\n     */\n    mobileTerminated?: boolean;\n    /**\n     *\n     * @type {Date}\n     * @memberof DeviceMessage\n     */\n    created: Date;\n    /**\n     *\n     * @type {Date}\n     * @memberof DeviceMessage\n     */\n    sent?: Date;\n    /**\n     *\n     * @type {number}\n     * @memberof DeviceMessage\n     */\n    id?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof DeviceMessage\n     */\n    deviceId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof DeviceMessage\n     */\n    userId?: number;\n}\n\n/**\n *\n * @export\n * @interface DeviceTransient\n */\nexport interface DeviceTransient {\n    /**\n     *\n     * @type {number}\n     * @memberof DeviceTransient\n     */\n    type: number;\n    /**\n     *\n     * @type {number}\n     * @memberof DeviceTransient\n     */\n    duration: number;\n    /**\n     *\n     * @type {Date}\n     * @memberof DeviceTransient\n     */\n    triggeredAt: Date;\n    /**\n     *\n     * @type {Date}\n     * @memberof DeviceTransient\n     */\n    end?: Date;\n    /**\n     *\n     * @type {Date}\n     * @memberof DeviceTransient\n     */\n    sent?: Date;\n    /**\n     *\n     * @type {boolean}\n     * @memberof DeviceTransient\n     */\n    sms?: boolean;\n    /**\n     *\n     * @type {number}\n     * @memberof DeviceTransient\n     */\n    id?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof DeviceTransient\n     */\n    deviceId?: number;\n}\n\n/**\n *\n * @export\n * @interface GeoPoint\n */\nexport interface GeoPoint {\n    /**\n     *\n     * @type {number}\n     * @memberof GeoPoint\n     */\n    lat?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof GeoPoint\n     */\n    lng?: number;\n}\n\n/**\n *\n * @export\n * @interface Geofence\n */\nexport interface Geofence {\n    /**\n     * Array of {lat:x,lng:y} objects representing the vertices of the polygon. Do not use with center and radius.\n     * @type {Array<any>}\n     * @memberof Geofence\n     */\n    outline?: Array<any>;\n    /**\n     * For circular geofences, the center. Property is ignored if outline != null.\n     * @type {GeoPoint}\n     * @memberof Geofence\n     */\n    center?: GeoPoint;\n    /**\n     * For circular geofences, the radius of the circle in meters. Property is ignored if outline != null.\n     * @type {number}\n     * @memberof Geofence\n     */\n    radius?: number;\n    /**\n     * Grouping value\n     * @type {string}\n     * @memberof Geofence\n     */\n    type?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof Geofence\n     */\n    name?: string;\n    /**\n     * If the last point received was inside the geofence. Only updated for notifications (not the safe-zone as that is evaluated on the device)\n     * @type {boolean}\n     * @memberof Geofence\n     */\n    wasInside?: boolean;\n    /**\n     * When the geofence was last evaluated. Only updated for notifications (not the safe-zone as that is evaluated on the device)\n     * @type {Date}\n     * @memberof Geofence\n     */\n    lastChecked?: Date;\n    /**\n     *\n     * @type {boolean}\n     * @memberof Geofence\n     */\n    modified?: boolean;\n    /**\n     *\n     * @type {number}\n     * @memberof Geofence\n     */\n    id?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Geofence\n     */\n    deviceId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Geofence\n     */\n    configId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Geofence\n     */\n    userId?: number;\n}\n\n/**\n *\n * @export\n * @interface InlineResponse200\n */\nexport interface InlineResponse200 {\n    /**\n     *\n     * @type {string}\n     * @memberof InlineResponse200\n     */\n    clientId?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof InlineResponse200\n     */\n    username?: string;\n    /**\n     *\n     * @type {string}\n     * @memberof InlineResponse200\n     */\n    password?: string;\n}\n\n/**\n *\n * @export\n * @interface Notification\n */\nexport interface Notification {\n    /**\n     *\n     * @type {Date}\n     * @memberof Notification\n     */\n    created: Date;\n    /**\n     *\n     * @type {any}\n     * @memberof Notification\n     */\n    params?: any;\n    /**\n     *\n     * @type {string}\n     * @memberof Notification\n     */\n    message?: string;\n    /**\n     *\n     * @type {Date}\n     * @memberof Notification\n     */\n    dismissedOn?: Date;\n    /**\n     *\n     * @type {any}\n     * @memberof Notification\n     */\n    dismissedBy?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof Notification\n     */\n    id?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Notification\n     */\n    deviceId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Notification\n     */\n    pointId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Notification\n     */\n    userId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof Notification\n     */\n    triggerId?: number;\n}\n\n/**\n *\n * @export\n * @interface NotificationTrigger\n */\nexport interface NotificationTrigger {\n    /**\n     *\n     * @type {string}\n     * @memberof NotificationTrigger\n     */\n    name: string;\n    /**\n     *\n     * @type {string}\n     * @memberof NotificationTrigger\n     */\n    type: string;\n    /**\n     *\n     * @type {any}\n     * @memberof NotificationTrigger\n     */\n    parameters?: any;\n    /**\n     *\n     * @type {number}\n     * @memberof NotificationTrigger\n     */\n    muteFor: number;\n    /**\n     *\n     * @type {Date}\n     * @memberof NotificationTrigger\n     */\n    lastTriggered?: Date;\n    /**\n     *\n     * @type {any}\n     * @memberof NotificationTrigger\n     */\n    delivery: any;\n    /**\n     *\n     * @type {number}\n     * @memberof NotificationTrigger\n     */\n    userListId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof NotificationTrigger\n     */\n    deviceListId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof NotificationTrigger\n     */\n    id?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof NotificationTrigger\n     */\n    deviceId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof NotificationTrigger\n     */\n    userId?: number;\n}\n\n/**\n *\n * @export\n * @interface SensorReading\n */\nexport interface SensorReading {\n    /**\n     * Timestamp for the reading\n     * @type {Date}\n     * @memberof SensorReading\n     */\n    timestamp: Date;\n    /**\n     * Timestamp for the writing to db\n     * @type {Date}\n     * @memberof SensorReading\n     */\n    created: Date;\n    /**\n     * Sensor type: 'ultra' (fill level), 'temp' (temperature), ...\n     * @type {string}\n     * @memberof SensorReading\n     */\n    type: string;\n    /**\n     * JSON value\n     * @type {any}\n     * @memberof SensorReading\n     */\n    value: any;\n    /**\n     * RSSI if from secondary wireless device\n     * @type {number}\n     * @memberof SensorReading\n     */\n    rssi?: number;\n    /**\n     * JSON metadata\n     * @type {any}\n     * @memberof SensorReading\n     */\n    meta?: any;\n    /**\n     * LoraId of another (ie for signal strength)\n     * @type {number}\n     * @memberof SensorReading\n     */\n    relatedId?: number;\n    /**\n     * Internal use - correlation identifier\n     * @type {string}\n     * @memberof SensorReading\n     */\n    correlationId?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof SensorReading\n     */\n    id?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof SensorReading\n     */\n    gatewayId?: number;\n    /**\n     *\n     * @type {number}\n     * @memberof SensorReading\n     */\n    deviceId?: number;\n    /**\n     *\n     * @type {string}\n     * @memberof SensorReading\n     */\n    sensorDeviceId?: string;\n    /**\n     *\n     * @type {number}\n     * @memberof SensorReading\n     */\n    datapointId?: number;\n}\n\n\n/**\n * DeviceApi - fetch parameter creator\n * @export\n */\nexport const DeviceApiFetchParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         *\n         * @summary Find a model instance by {{id}} from the data source.\n         * @param {string} id Model id\n         * @param {string} [filter] Filter defining fields and include - must be a JSON-encoded string ({\\&quot;something\\&quot;:\\&quot;value\\&quot;})\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deviceFindById(id: string, filter?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling deviceFindById.');\n            }\n            const localVarPath = `/devices/{id}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Creates a new instance in gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeCreateGatewayReadings(id: number, data?: SensorReading, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeCreateGatewayReadings.');\n            }\n            const localVarPath = `/devices/{id}/gatewayReadings`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'POST'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"SensorReading\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(data || {}) : (data || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Creates a new instance in messages of this model.\n         * @param {number} id device id\n         * @param {DeviceMessage} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeCreateMessages(id: number, data?: DeviceMessage, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeCreateMessages.');\n            }\n            const localVarPath = `/devices/{id}/messages`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'POST'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"DeviceMessage\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(data || {}) : (data || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Create alert/notification trigger for device\n         * @param {number} id device id\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeCreateNotificationTriggers(id: number, data?: NotificationTrigger, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeCreateNotificationTriggers.');\n            }\n            const localVarPath = `/devices/{id}/notificationTriggers`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'POST'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"NotificationTrigger\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(data || {}) : (data || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Deletes all gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDeleteGatewayReadings(id: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeDeleteGatewayReadings.');\n            }\n            const localVarPath = `/devices/{id}/gatewayReadings`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'DELETE'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Deletes all messages of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDeleteMessages(id: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeDeleteMessages.');\n            }\n            const localVarPath = `/devices/{id}/messages`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'DELETE'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Remove all alert/notification trigger for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDeleteNotificationTriggers(id: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeDeleteNotificationTriggers.');\n            }\n            const localVarPath = `/devices/{id}/notificationTriggers`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'DELETE'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Delete a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdGatewayReadings(id: number, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeDestroyByIdGatewayReadings.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeDestroyByIdGatewayReadings.');\n            }\n            const localVarPath = `/devices/{id}/gatewayReadings/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'DELETE'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Remove alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdNotificationTriggers(id: number, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeDestroyByIdNotificationTriggers.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeDestroyByIdNotificationTriggers.');\n            }\n            const localVarPath = `/devices/{id}/notificationTriggers/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'DELETE'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Delete a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdPoints(id: number, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeDestroyByIdPoints.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeDestroyByIdPoints.');\n            }\n            const localVarPath = `/devices/{id}/points/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'DELETE'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Delete a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdTransients(id: number, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeDestroyByIdTransients.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeDestroyByIdTransients.');\n            }\n            const localVarPath = `/devices/{id}/transients/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'DELETE'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Find a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdGatewayReadings(id: number, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeFindByIdGatewayReadings.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeFindByIdGatewayReadings.');\n            }\n            const localVarPath = `/devices/{id}/gatewayReadings/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Find a related item by id for notificationTriggers.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdNotificationTriggers(id: number, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeFindByIdNotificationTriggers.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeFindByIdNotificationTriggers.');\n            }\n            const localVarPath = `/devices/{id}/notificationTriggers/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Retrieve a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdPoints(id: number, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeFindByIdPoints.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeFindByIdPoints.');\n            }\n            const localVarPath = `/devices/{id}/points/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Retrieve a specific reading for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for readings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdReadings(id: number, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeFindByIdReadings.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeFindByIdReadings.');\n            }\n            const localVarPath = `/devices/{id}/readings/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Find a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdTransients(id: number, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeFindByIdTransients.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeFindByIdTransients.');\n            }\n            const localVarPath = `/devices/{id}/transients/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @param {number} id device id\n         * @param {number} duration How long to go into flightMode, in minutes\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFlightMode(id: number, duration: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeFlightMode.');\n            }\n            // verify required parameter 'duration' is not null or undefined\n            if (duration === null || duration === undefined) {\n                throw new RequiredError('duration', 'Required parameter duration was null or undefined when calling devicePrototypeFlightMode.');\n            }\n            const localVarPath = `/devices/{id}/flightMode`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (duration !== undefined) {\n                localVarQueryParameter['duration'] = duration;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Retrieve configuration for a device\n         * @param {number} id device id\n         * @param {boolean} [refresh] unused\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetConfig(id: number, refresh?: boolean, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeGetConfig.');\n            }\n            const localVarPath = `/devices/{id}/config`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (refresh !== undefined) {\n                localVarQueryParameter['refresh'] = refresh;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Queries gatewayReadings of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetGatewayReadings(id: number, filter?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeGetGatewayReadings.');\n            }\n            const localVarPath = `/devices/{id}/gatewayReadings`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Queries messages of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetMessages(id: number, filter?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeGetMessages.');\n            }\n            const localVarPath = `/devices/{id}/messages`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Get alerts for device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetNotificationTriggers(id: number, filter?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeGetNotificationTriggers.');\n            }\n            const localVarPath = `/devices/{id}/notificationTriggers`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Retrieve points for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetPoints(id: number, filter?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeGetPoints.');\n            }\n            const localVarPath = `/devices/{id}/points`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Retrieve readings for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetReadings(id: number, filter?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeGetReadings.');\n            }\n            const localVarPath = `/devices/{id}/readings`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Get safe-zone for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetSafeZone(id: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeGetSafeZone.');\n            }\n            const localVarPath = `/devices/{id}/getSafeZone`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Queries transients of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetTransients(id: number, filter?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeGetTransients.');\n            }\n            const localVarPath = `/devices/{id}/transients`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @param {number} id device id\n         * @param {string} nearbyId\n         * @param {string} dateRange\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeNearbyDeviceData(id: number, nearbyId: string, dateRange: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeNearbyDeviceData.');\n            }\n            // verify required parameter 'nearbyId' is not null or undefined\n            if (nearbyId === null || nearbyId === undefined) {\n                throw new RequiredError('nearbyId', 'Required parameter nearbyId was null or undefined when calling devicePrototypeNearbyDeviceData.');\n            }\n            // verify required parameter 'dateRange' is not null or undefined\n            if (dateRange === null || dateRange === undefined) {\n                throw new RequiredError('dateRange', 'Required parameter dateRange was null or undefined when calling devicePrototypeNearbyDeviceData.');\n            }\n            const localVarPath = `/devices/{id}/nearbyDeviceData`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (nearbyId !== undefined) {\n                localVarQueryParameter['nearbyId'] = nearbyId;\n            }\n\n            if (dateRange !== undefined) {\n                localVarQueryParameter['dateRange'] = dateRange;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @param {number} id device id\n         * @param {string} [dateRange]\n         * @param {string} [correlationId]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeNearbyDevices(id: number, dateRange?: string, correlationId?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeNearbyDevices.');\n            }\n            const localVarPath = `/devices/{id}/nearbyDevices`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (dateRange !== undefined) {\n                localVarQueryParameter['dateRange'] = dateRange;\n            }\n\n            if (correlationId !== undefined) {\n                localVarQueryParameter['correlationId'] = correlationId;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Update safe-zone for device\n         * @param {number} id device id\n         * @param {Array<GeoPoint>} data Array of {lat:x,lng:y} points denoting the vertices of the safe-zone\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeSetSafeZone(id: number, data: Array<GeoPoint>, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeSetSafeZone.');\n            }\n            // verify required parameter 'data' is not null or undefined\n            if (data === null || data === undefined) {\n                throw new RequiredError('data', 'Required parameter data was null or undefined when calling devicePrototypeSetSafeZone.');\n            }\n            const localVarPath = `/devices/{id}/setSafeZone`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'POST'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"Array&lt;GeoPoint&gt;\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(data || {}) : (data || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Update a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateByIdGatewayReadings(id: number, fk: number, data?: SensorReading, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeUpdateByIdGatewayReadings.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeUpdateByIdGatewayReadings.');\n            }\n            const localVarPath = `/devices/{id}/gatewayReadings/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'PUT'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"SensorReading\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(data || {}) : (data || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Update an alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateByIdNotificationTriggers(id: number, fk: number, data?: NotificationTrigger, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeUpdateByIdNotificationTriggers.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeUpdateByIdNotificationTriggers.');\n            }\n            const localVarPath = `/devices/{id}/notificationTriggers/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'PUT'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"NotificationTrigger\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(data || {}) : (data || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Update a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {DeviceTransient} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateByIdTransients(id: number, fk: number, data?: DeviceTransient, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeUpdateByIdTransients.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling devicePrototypeUpdateByIdTransients.');\n            }\n            const localVarPath = `/devices/{id}/transients/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'PUT'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"DeviceTransient\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(data || {}) : (data || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Update configuration for a device\n         * @param {number} id device id\n         * @param {DeviceConfig} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateConfig(id: number, data?: DeviceConfig, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling devicePrototypeUpdateConfig.');\n            }\n            const localVarPath = `/devices/{id}/config`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'PUT'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"DeviceConfig\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(data || {}) : (data || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * DeviceApi - functional programming interface\n * @export\n */\nexport const DeviceApiFp = function (configuration?: Configuration) {\n    return {\n        /**\n         *\n         * @summary Find a model instance by {{id}} from the data source.\n         * @param {string} id Model id\n         * @param {string} [filter] Filter defining fields and include - must be a JSON-encoded string ({\\&quot;something\\&quot;:\\&quot;value\\&quot;})\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deviceFindById(id: string, filter?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Device> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).deviceFindById(id, filter, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Creates a new instance in gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeCreateGatewayReadings(id: number, data?: SensorReading, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<SensorReading> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeCreateGatewayReadings(id, data, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Creates a new instance in messages of this model.\n         * @param {number} id device id\n         * @param {DeviceMessage} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeCreateMessages(id: number, data?: DeviceMessage, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DeviceMessage> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeCreateMessages(id, data, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Create alert/notification trigger for device\n         * @param {number} id device id\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeCreateNotificationTriggers(id: number, data?: NotificationTrigger, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NotificationTrigger> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeCreateNotificationTriggers(id, data, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Deletes all gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDeleteGatewayReadings(id: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeDeleteGatewayReadings(id, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Deletes all messages of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDeleteMessages(id: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeDeleteMessages(id, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Remove all alert/notification trigger for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDeleteNotificationTriggers(id: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeDeleteNotificationTriggers(id, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Delete a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdGatewayReadings(id: number, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeDestroyByIdGatewayReadings(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Remove alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdNotificationTriggers(id: number, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeDestroyByIdNotificationTriggers(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Delete a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdPoints(id: number, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeDestroyByIdPoints(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Delete a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdTransients(id: number, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeDestroyByIdTransients(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Find a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdGatewayReadings(id: number, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<SensorReading> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeFindByIdGatewayReadings(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Find a related item by id for notificationTriggers.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdNotificationTriggers(id: number, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NotificationTrigger> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeFindByIdNotificationTriggers(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Retrieve a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdPoints(id: number, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Datapoint> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeFindByIdPoints(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Retrieve a specific reading for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for readings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdReadings(id: number, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<SensorReading> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeFindByIdReadings(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Find a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdTransients(id: number, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DeviceTransient> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeFindByIdTransients(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @param {number} id device id\n         * @param {number} duration How long to go into flightMode, in minutes\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFlightMode(id: number, duration: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<any> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeFlightMode(id, duration, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Retrieve configuration for a device\n         * @param {number} id device id\n         * @param {boolean} [refresh] unused\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetConfig(id: number, refresh?: boolean, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DeviceConfig> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeGetConfig(id, refresh, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Queries gatewayReadings of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetGatewayReadings(id: number, filter?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<SensorReading>> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeGetGatewayReadings(id, filter, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Queries messages of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetMessages(id: number, filter?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<DeviceMessage>> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeGetMessages(id, filter, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Get alerts for device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetNotificationTriggers(id: number, filter?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<NotificationTrigger>> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeGetNotificationTriggers(id, filter, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Retrieve points for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetPoints(id: number, filter?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Datapoint>> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeGetPoints(id, filter, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Retrieve readings for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetReadings(id: number, filter?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<SensorReading>> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeGetReadings(id, filter, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Get safe-zone for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetSafeZone(id: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Geofence> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeGetSafeZone(id, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Queries transients of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetTransients(id: number, filter?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<DeviceTransient>> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeGetTransients(id, filter, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @param {number} id device id\n         * @param {string} nearbyId\n         * @param {string} dateRange\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeNearbyDeviceData(id: number, nearbyId: string, dateRange: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<any> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeNearbyDeviceData(id, nearbyId, dateRange, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @param {number} id device id\n         * @param {string} [dateRange]\n         * @param {string} [correlationId]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeNearbyDevices(id: number, dateRange?: string, correlationId?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<any> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeNearbyDevices(id, dateRange, correlationId, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Update safe-zone for device\n         * @param {number} id device id\n         * @param {Array<GeoPoint>} data Array of {lat:x,lng:y} points denoting the vertices of the safe-zone\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeSetSafeZone(id: number, data: Array<GeoPoint>, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Geofence> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeSetSafeZone(id, data, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Update a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateByIdGatewayReadings(id: number, fk: number, data?: SensorReading, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<SensorReading> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeUpdateByIdGatewayReadings(id, fk, data, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Update an alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateByIdNotificationTriggers(id: number, fk: number, data?: NotificationTrigger, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<NotificationTrigger> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeUpdateByIdNotificationTriggers(id, fk, data, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Update a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {DeviceTransient} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateByIdTransients(id: number, fk: number, data?: DeviceTransient, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DeviceTransient> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeUpdateByIdTransients(id, fk, data, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Update configuration for a device\n         * @param {number} id device id\n         * @param {DeviceConfig} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateConfig(id: number, data?: DeviceConfig, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<DeviceConfig> {\n            const localVarFetchArgs = DeviceApiFetchParamCreator(configuration).devicePrototypeUpdateConfig(id, data, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    }\n};\n\n/**\n * DeviceApi - factory interface\n * @export\n */\nexport const DeviceApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary Find a model instance by {{id}} from the data source.\n         * @param {string} id Model id\n         * @param {string} [filter] Filter defining fields and include - must be a JSON-encoded string ({\\&quot;something\\&quot;:\\&quot;value\\&quot;})\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deviceFindById(id: string, filter?: string, options?: any) {\n            return DeviceApiFp(configuration).deviceFindById(id, filter, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Creates a new instance in gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeCreateGatewayReadings(id: number, data?: SensorReading, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeCreateGatewayReadings(id, data, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Creates a new instance in messages of this model.\n         * @param {number} id device id\n         * @param {DeviceMessage} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeCreateMessages(id: number, data?: DeviceMessage, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeCreateMessages(id, data, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Create alert/notification trigger for device\n         * @param {number} id device id\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeCreateNotificationTriggers(id: number, data?: NotificationTrigger, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeCreateNotificationTriggers(id, data, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Deletes all gatewayReadings of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDeleteGatewayReadings(id: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeDeleteGatewayReadings(id, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Deletes all messages of this model.\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDeleteMessages(id: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeDeleteMessages(id, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Remove all alert/notification trigger for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDeleteNotificationTriggers(id: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeDeleteNotificationTriggers(id, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Delete a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdGatewayReadings(id: number, fk: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeDestroyByIdGatewayReadings(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Remove alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdNotificationTriggers(id: number, fk: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeDestroyByIdNotificationTriggers(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Delete a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdPoints(id: number, fk: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeDestroyByIdPoints(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Delete a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeDestroyByIdTransients(id: number, fk: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeDestroyByIdTransients(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Find a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdGatewayReadings(id: number, fk: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeFindByIdGatewayReadings(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Find a related item by id for notificationTriggers.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdNotificationTriggers(id: number, fk: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeFindByIdNotificationTriggers(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Retrieve a specific point for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for points\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdPoints(id: number, fk: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeFindByIdPoints(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Retrieve a specific reading for a device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for readings\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdReadings(id: number, fk: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeFindByIdReadings(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Find a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFindByIdTransients(id: number, fk: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeFindByIdTransients(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @param {number} id device id\n         * @param {number} duration How long to go into flightMode, in minutes\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeFlightMode(id: number, duration: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeFlightMode(id, duration, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Retrieve configuration for a device\n         * @param {number} id device id\n         * @param {boolean} [refresh] unused\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetConfig(id: number, refresh?: boolean, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeGetConfig(id, refresh, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Queries gatewayReadings of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetGatewayReadings(id: number, filter?: string, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeGetGatewayReadings(id, filter, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Queries messages of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetMessages(id: number, filter?: string, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeGetMessages(id, filter, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Get alerts for device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetNotificationTriggers(id: number, filter?: string, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeGetNotificationTriggers(id, filter, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Retrieve points for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetPoints(id: number, filter?: string, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeGetPoints(id, filter, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Retrieve readings for a device\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetReadings(id: number, filter?: string, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeGetReadings(id, filter, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Get safe-zone for device\n         * @param {number} id device id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetSafeZone(id: number, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeGetSafeZone(id, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Queries transients of device.\n         * @param {number} id device id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeGetTransients(id: number, filter?: string, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeGetTransients(id, filter, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @param {number} id device id\n         * @param {string} nearbyId\n         * @param {string} dateRange\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeNearbyDeviceData(id: number, nearbyId: string, dateRange: string, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeNearbyDeviceData(id, nearbyId, dateRange, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @param {number} id device id\n         * @param {string} [dateRange]\n         * @param {string} [correlationId]\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeNearbyDevices(id: number, dateRange?: string, correlationId?: string, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeNearbyDevices(id, dateRange, correlationId, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Update safe-zone for device\n         * @param {number} id device id\n         * @param {Array<GeoPoint>} data Array of {lat:x,lng:y} points denoting the vertices of the safe-zone\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeSetSafeZone(id: number, data: Array<GeoPoint>, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeSetSafeZone(id, data, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Update a related item by id for gatewayReadings.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for gatewayReadings\n         * @param {SensorReading} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateByIdGatewayReadings(id: number, fk: number, data?: SensorReading, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeUpdateByIdGatewayReadings(id, fk, data, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Update an alert/notification trigger by id {fk} for device\n         * @param {number} id device id\n         * @param {number} fk Foreign key for notificationTriggers\n         * @param {NotificationTrigger} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateByIdNotificationTriggers(id: number, fk: number, data?: NotificationTrigger, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeUpdateByIdNotificationTriggers(id, fk, data, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Update a related item by id for transients.\n         * @param {number} id device id\n         * @param {number} fk Foreign key for transients\n         * @param {DeviceTransient} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateByIdTransients(id: number, fk: number, data?: DeviceTransient, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeUpdateByIdTransients(id, fk, data, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Update configuration for a device\n         * @param {number} id device id\n         * @param {DeviceConfig} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        devicePrototypeUpdateConfig(id: number, data?: DeviceConfig, options?: any) {\n            return DeviceApiFp(configuration).devicePrototypeUpdateConfig(id, data, options)(fetch, basePath);\n        },\n    };\n};\n\n/**\n * DeviceApi - object-oriented interface\n * @export\n * @class DeviceApi\n * @extends {BaseAPI}\n */\nexport class DeviceApi extends BaseAPI {\n    /**\n     *\n     * @summary Find a model instance by {{id}} from the data source.\n     * @param {string} id Model id\n     * @param {string} [filter] Filter defining fields and include - must be a JSON-encoded string ({\\&quot;something\\&quot;:\\&quot;value\\&quot;})\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public deviceFindById(id: string, filter?: string, options?: any) {\n        return DeviceApiFp(this.configuration).deviceFindById(id, filter, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Creates a new instance in gatewayReadings of this model.\n     * @param {number} id device id\n     * @param {SensorReading} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeCreateGatewayReadings(id: number, data?: SensorReading, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeCreateGatewayReadings(id, data, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Creates a new instance in messages of this model.\n     * @param {number} id device id\n     * @param {DeviceMessage} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeCreateMessages(id: number, data?: DeviceMessage, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeCreateMessages(id, data, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Create alert/notification trigger for device\n     * @param {number} id device id\n     * @param {NotificationTrigger} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeCreateNotificationTriggers(id: number, data?: NotificationTrigger, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeCreateNotificationTriggers(id, data, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Deletes all gatewayReadings of this model.\n     * @param {number} id device id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeDeleteGatewayReadings(id: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeDeleteGatewayReadings(id, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Deletes all messages of this model.\n     * @param {number} id device id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeDeleteMessages(id: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeDeleteMessages(id, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Remove all alert/notification trigger for device\n     * @param {number} id device id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeDeleteNotificationTriggers(id: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeDeleteNotificationTriggers(id, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Delete a related item by id for gatewayReadings.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for gatewayReadings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeDestroyByIdGatewayReadings(id: number, fk: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeDestroyByIdGatewayReadings(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Remove alert/notification trigger by id {fk} for device\n     * @param {number} id device id\n     * @param {number} fk Foreign key for notificationTriggers\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeDestroyByIdNotificationTriggers(id: number, fk: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeDestroyByIdNotificationTriggers(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Delete a specific point for a device\n     * @param {number} id device id\n     * @param {number} fk Foreign key for points\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeDestroyByIdPoints(id: number, fk: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeDestroyByIdPoints(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Delete a related item by id for transients.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for transients\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeDestroyByIdTransients(id: number, fk: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeDestroyByIdTransients(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Find a related item by id for gatewayReadings.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for gatewayReadings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeFindByIdGatewayReadings(id: number, fk: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeFindByIdGatewayReadings(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Find a related item by id for notificationTriggers.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for notificationTriggers\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeFindByIdNotificationTriggers(id: number, fk: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeFindByIdNotificationTriggers(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Retrieve a specific point for a device\n     * @param {number} id device id\n     * @param {number} fk Foreign key for points\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeFindByIdPoints(id: number, fk: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeFindByIdPoints(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Retrieve a specific reading for a device\n     * @param {number} id device id\n     * @param {number} fk Foreign key for readings\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeFindByIdReadings(id: number, fk: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeFindByIdReadings(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Find a related item by id for transients.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for transients\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeFindByIdTransients(id: number, fk: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeFindByIdTransients(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @param {number} id device id\n     * @param {number} duration How long to go into flightMode, in minutes\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeFlightMode(id: number, duration: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeFlightMode(id, duration, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Retrieve configuration for a device\n     * @param {number} id device id\n     * @param {boolean} [refresh] unused\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeGetConfig(id: number, refresh?: boolean, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeGetConfig(id, refresh, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Queries gatewayReadings of device.\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeGetGatewayReadings(id: number, filter?: string, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeGetGatewayReadings(id, filter, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Queries messages of device.\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeGetMessages(id: number, filter?: string, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeGetMessages(id, filter, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Get alerts for device\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeGetNotificationTriggers(id: number, filter?: string, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeGetNotificationTriggers(id, filter, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Retrieve points for a device\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeGetPoints(id: number, filter?: string, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeGetPoints(id, filter, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Retrieve readings for a device\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeGetReadings(id: number, filter?: string, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeGetReadings(id, filter, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Get safe-zone for device\n     * @param {number} id device id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeGetSafeZone(id: number, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeGetSafeZone(id, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Queries transients of device.\n     * @param {number} id device id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeGetTransients(id: number, filter?: string, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeGetTransients(id, filter, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @param {number} id device id\n     * @param {string} nearbyId\n     * @param {string} dateRange\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeNearbyDeviceData(id: number, nearbyId: string, dateRange: string, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeNearbyDeviceData(id, nearbyId, dateRange, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @param {number} id device id\n     * @param {string} [dateRange]\n     * @param {string} [correlationId]\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeNearbyDevices(id: number, dateRange?: string, correlationId?: string, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeNearbyDevices(id, dateRange, correlationId, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Update safe-zone for device\n     * @param {number} id device id\n     * @param {Array<GeoPoint>} data Array of {lat:x,lng:y} points denoting the vertices of the safe-zone\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeSetSafeZone(id: number, data: Array<GeoPoint>, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeSetSafeZone(id, data, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Update a related item by id for gatewayReadings.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for gatewayReadings\n     * @param {SensorReading} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeUpdateByIdGatewayReadings(id: number, fk: number, data?: SensorReading, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeUpdateByIdGatewayReadings(id, fk, data, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Update an alert/notification trigger by id {fk} for device\n     * @param {number} id device id\n     * @param {number} fk Foreign key for notificationTriggers\n     * @param {NotificationTrigger} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeUpdateByIdNotificationTriggers(id: number, fk: number, data?: NotificationTrigger, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeUpdateByIdNotificationTriggers(id, fk, data, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Update a related item by id for transients.\n     * @param {number} id device id\n     * @param {number} fk Foreign key for transients\n     * @param {DeviceTransient} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeUpdateByIdTransients(id: number, fk: number, data?: DeviceTransient, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeUpdateByIdTransients(id, fk, data, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Update configuration for a device\n     * @param {number} id device id\n     * @param {DeviceConfig} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DeviceApi\n     */\n    public devicePrototypeUpdateConfig(id: number, data?: DeviceConfig, options?: any) {\n        return DeviceApiFp(this.configuration).devicePrototypeUpdateConfig(id, data, options)(this.fetch, this.basePath);\n    }\n\n}\n\n/**\n * UserApi - fetch parameter creator\n * @export\n */\nexport const UserApiFetchParamCreator = function (configuration?: Configuration) {\n    return {\n        /**\n         *\n         * @summary Login a user with username/email and password.\n         * @param {Credentials} credentials Body (JSON)\n         * @param {string} [include] Related objects to include in the response. See the description of return value for more details.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userLogin(credentials: Credentials, include?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'credentials' is not null or undefined\n            if (credentials === null || credentials === undefined) {\n                throw new RequiredError('credentials', 'Required parameter credentials was null or undefined when calling userLogin.');\n            }\n            const localVarPath = `/users/login`;\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'POST'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (include !== undefined) {\n                localVarQueryParameter['include'] = include;\n            }\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"Credentials\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(credentials || {}) : (credentials || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Creates a new instance in geofences of this model.\n         * @param {string} id user id\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeCreateGeofences(id: string, data?: Geofence, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling userPrototypeCreateGeofences.');\n            }\n            const localVarPath = `/users/{id}/geofences`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'POST'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"Geofence\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(data || {}) : (data || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Deletes all geofences of this model.\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeDeleteGeofences(id: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling userPrototypeDeleteGeofences.');\n            }\n            const localVarPath = `/users/{id}/geofences`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'DELETE'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Delete a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeDestroyByIdGeofences(id: string, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling userPrototypeDestroyByIdGeofences.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling userPrototypeDestroyByIdGeofences.');\n            }\n            const localVarPath = `/users/{id}/geofences/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'DELETE'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Find a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeFindByIdGeofences(id: string, fk: number, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling userPrototypeFindByIdGeofences.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling userPrototypeFindByIdGeofences.');\n            }\n            const localVarPath = `/users/{id}/geofences/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Retrieve a summary of all devices on this user account.\n         * @param {string} id user id\n         * @param {string} [pointCount] Maximum number of points to return per device. Default 5.\n         * @param {string} [dateRange] What date range to consider when retrieving recent points. Typical use is [TimeOfLastPointDownload, NOW]. Defaults to all time.\n         * @param {string} [hideApprox] Don&#39;t include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetDeviceSummary(id: string, pointCount?: string, dateRange?: string, hideApprox?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling userPrototypeGetDeviceSummary.');\n            }\n            const localVarPath = `/users/{id}/getDeviceSummary`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (pointCount !== undefined) {\n                localVarQueryParameter['pointCount'] = pointCount;\n            }\n\n            if (dateRange !== undefined) {\n                localVarQueryParameter['dateRange'] = dateRange;\n            }\n\n            if (hideApprox !== undefined) {\n                localVarQueryParameter['hideApprox'] = hideApprox;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Queries devices of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetDevices(id: string, filter?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling userPrototypeGetDevices.');\n            }\n            const localVarPath = `/users/{id}/devices`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Retrieve a list of devices in any given zone or group of zones.\n         * @param {string} id user id\n         * @param {string} [zoneId] ID of geofence to search. zoneId or zoneType required.\n         * @param {string} [zoneType] Type of zones to search. Ignored if zoneId is specified. zoneId or zoneType required.\n         * @param {string} [includeApprox] Include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetDevicesInZone(id: string, zoneId?: string, zoneType?: string, includeApprox?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling userPrototypeGetDevicesInZone.');\n            }\n            const localVarPath = `/users/{id}/getDevicesInZone`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (zoneId !== undefined) {\n                localVarQueryParameter['zoneId'] = zoneId;\n            }\n\n            if (zoneType !== undefined) {\n                localVarQueryParameter['zoneType'] = zoneType;\n            }\n\n            if (includeApprox !== undefined) {\n                localVarQueryParameter['includeApprox'] = includeApprox;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Queries geofences of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetGeofences(id: string, filter?: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling userPrototypeGetGeofences.');\n            }\n            const localVarPath = `/users/{id}/geofences`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            if (filter !== undefined) {\n                localVarQueryParameter['filter'] = filter;\n            }\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetMqttCredentials(id: string, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling userPrototypeGetMqttCredentials.');\n            }\n            const localVarPath = `/users/{id}/getMqttCredentials`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'GET'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n        /**\n         *\n         * @summary Update a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeUpdateByIdGeofences(id: string, fk: number, data?: Geofence, options: any = {}): FetchArgs {\n            // verify required parameter 'id' is not null or undefined\n            if (id === null || id === undefined) {\n                throw new RequiredError('id', 'Required parameter id was null or undefined when calling userPrototypeUpdateByIdGeofences.');\n            }\n            // verify required parameter 'fk' is not null or undefined\n            if (fk === null || fk === undefined) {\n                throw new RequiredError('fk', 'Required parameter fk was null or undefined when calling userPrototypeUpdateByIdGeofences.');\n            }\n            const localVarPath = `/users/{id}/geofences/{fk}`\n                .replace(`{${\"id\"}}`, encodeURIComponent(String(id)))\n                .replace(`{${\"fk\"}}`, encodeURIComponent(String(fk)));\n            const localVarUrlObj = url.parse(localVarPath, true);\n            const localVarRequestOptions = Object.assign({method: 'PUT'}, options);\n            const localVarHeaderParameter = {\"Authorization\" : configuration?.accessToken} as any;\n            const localVarQueryParameter = {} as any;\n\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n\n            localVarUrlObj.query = Object.assign({}, localVarUrlObj.query, localVarQueryParameter, options.query);\n            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n            localVarUrlObj.search = undefined;\n            localVarRequestOptions.headers = Object.assign({}, localVarHeaderParameter, options.headers);\n            const needsSerialization = (<any>\"Geofence\" !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n            localVarRequestOptions.body = needsSerialization ? JSON.stringify(data || {}) : (data || \"\");\n\n            return {\n                url: url.format(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        },\n    }\n};\n\n/**\n * UserApi - functional programming interface\n * @export\n */\nexport const UserApiFp = function (configuration?: Configuration) {\n    return {\n        /**\n         *\n         * @summary Login a user with username/email and password.\n         * @param {Credentials} credentials Body (JSON)\n         * @param {string} [include] Related objects to include in the response. See the description of return value for more details.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userLogin(credentials: Credentials, include?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<AccessToken> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userLogin(credentials, include, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Creates a new instance in geofences of this model.\n         * @param {string} id user id\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeCreateGeofences(id: string, data?: Geofence, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Geofence> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userPrototypeCreateGeofences(id, data, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Deletes all geofences of this model.\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeDeleteGeofences(id: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userPrototypeDeleteGeofences(id, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Delete a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeDestroyByIdGeofences(id: string, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Response> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userPrototypeDestroyByIdGeofences(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response;\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Find a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeFindByIdGeofences(id: string, fk: number, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Geofence> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userPrototypeFindByIdGeofences(id, fk, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Retrieve a summary of all devices on this user account.\n         * @param {string} id user id\n         * @param {string} [pointCount] Maximum number of points to return per device. Default 5.\n         * @param {string} [dateRange] What date range to consider when retrieving recent points. Typical use is [TimeOfLastPointDownload, NOW]. Defaults to all time.\n         * @param {string} [hideApprox] Don&#39;t include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetDeviceSummary(id: string, pointCount?: string, dateRange?: string, hideApprox?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<any>> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userPrototypeGetDeviceSummary(id, pointCount, dateRange, hideApprox, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Queries devices of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetDevices(id: string, filter?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Device>> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userPrototypeGetDevices(id, filter, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Retrieve a list of devices in any given zone or group of zones.\n         * @param {string} id user id\n         * @param {string} [zoneId] ID of geofence to search. zoneId or zoneType required.\n         * @param {string} [zoneType] Type of zones to search. Ignored if zoneId is specified. zoneId or zoneType required.\n         * @param {string} [includeApprox] Include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetDevicesInZone(id: string, zoneId?: string, zoneType?: string, includeApprox?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<any>> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userPrototypeGetDevicesInZone(id, zoneId, zoneType, includeApprox, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Queries geofences of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetGeofences(id: string, filter?: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Geofence>> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userPrototypeGetGeofences(id, filter, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetMqttCredentials(id: string, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<InlineResponse200> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userPrototypeGetMqttCredentials(id, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n        /**\n         *\n         * @summary Update a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeUpdateByIdGeofences(id: string, fk: number, data?: Geofence, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Geofence> {\n            const localVarFetchArgs = UserApiFetchParamCreator(configuration).userPrototypeUpdateByIdGeofences(id, fk, data, options);\n            return (fetch: FetchAPI = portableFetch, basePath: string = BASE_PATH) => {\n                return fetch(basePath + localVarFetchArgs.url, localVarFetchArgs.options).then((response) => {\n                    if (response.status >= 200 && response.status < 300) {\n                        return response.json();\n                    } else {\n                        throw response;\n                    }\n                });\n            };\n        },\n    }\n};\n\n/**\n * UserApi - factory interface\n * @export\n */\nexport const UserApiFactory = function (configuration?: Configuration, fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary Login a user with username/email and password.\n         * @param {Credentials} credentials Body (JSON)\n         * @param {string} [include] Related objects to include in the response. See the description of return value for more details.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userLogin(credentials: Credentials, include?: string, options?: any) {\n            return UserApiFp(configuration).userLogin(credentials, include, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Creates a new instance in geofences of this model.\n         * @param {string} id user id\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeCreateGeofences(id: string, data?: Geofence, options?: any) {\n            return UserApiFp(configuration).userPrototypeCreateGeofences(id, data, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Deletes all geofences of this model.\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeDeleteGeofences(id: string, options?: any) {\n            return UserApiFp(configuration).userPrototypeDeleteGeofences(id, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Delete a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeDestroyByIdGeofences(id: string, fk: number, options?: any) {\n            return UserApiFp(configuration).userPrototypeDestroyByIdGeofences(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Find a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeFindByIdGeofences(id: string, fk: number, options?: any) {\n            return UserApiFp(configuration).userPrototypeFindByIdGeofences(id, fk, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Retrieve a summary of all devices on this user account.\n         * @param {string} id user id\n         * @param {string} [pointCount] Maximum number of points to return per device. Default 5.\n         * @param {string} [dateRange] What date range to consider when retrieving recent points. Typical use is [TimeOfLastPointDownload, NOW]. Defaults to all time.\n         * @param {string} [hideApprox] Don&#39;t include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetDeviceSummary(id: string, pointCount?: string, dateRange?: string, hideApprox?: string, options?: any) {\n            return UserApiFp(configuration).userPrototypeGetDeviceSummary(id, pointCount, dateRange, hideApprox, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Queries devices of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetDevices(id: string, filter?: string, options?: any) {\n            return UserApiFp(configuration).userPrototypeGetDevices(id, filter, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Retrieve a list of devices in any given zone or group of zones.\n         * @param {string} id user id\n         * @param {string} [zoneId] ID of geofence to search. zoneId or zoneType required.\n         * @param {string} [zoneType] Type of zones to search. Ignored if zoneId is specified. zoneId or zoneType required.\n         * @param {string} [includeApprox] Include GSM / poor accuracy locations. Default to false.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetDevicesInZone(id: string, zoneId?: string, zoneType?: string, includeApprox?: string, options?: any) {\n            return UserApiFp(configuration).userPrototypeGetDevicesInZone(id, zoneId, zoneType, includeApprox, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Queries geofences of user.\n         * @param {string} id user id\n         * @param {string} [filter] JSON Filter object\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetGeofences(id: string, filter?: string, options?: any) {\n            return UserApiFp(configuration).userPrototypeGetGeofences(id, filter, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @param {string} id user id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeGetMqttCredentials(id: string, options?: any) {\n            return UserApiFp(configuration).userPrototypeGetMqttCredentials(id, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Update a related item by id for geofences.\n         * @param {string} id user id\n         * @param {number} fk Foreign key for geofences\n         * @param {Geofence} [data] Body (JSON)\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        userPrototypeUpdateByIdGeofences(id: string, fk: number, data?: Geofence, options?: any) {\n            return UserApiFp(configuration).userPrototypeUpdateByIdGeofences(id, fk, data, options)(fetch, basePath);\n        },\n    };\n};\n\n/**\n * UserApi - object-oriented interface\n * @export\n * @class UserApi\n * @extends {BaseAPI}\n */\nexport class UserApi extends BaseAPI {\n    /**\n     *\n     * @summary Login a user with username/email and password.\n     * @param {Credentials} credentials Body (JSON)\n     * @param {string} [include] Related objects to include in the response. See the description of return value for more details.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userLogin(credentials: Credentials, include?: string, options?: any) {\n        return UserApiFp(this.configuration).userLogin(credentials, include, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Creates a new instance in geofences of this model.\n     * @param {string} id user id\n     * @param {Geofence} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userPrototypeCreateGeofences(id: string, data?: Geofence, options?: any) {\n        return UserApiFp(this.configuration).userPrototypeCreateGeofences(id, data, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Deletes all geofences of this model.\n     * @param {string} id user id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userPrototypeDeleteGeofences(id: string, options?: any) {\n        return UserApiFp(this.configuration).userPrototypeDeleteGeofences(id, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Delete a related item by id for geofences.\n     * @param {string} id user id\n     * @param {number} fk Foreign key for geofences\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userPrototypeDestroyByIdGeofences(id: string, fk: number, options?: any) {\n        return UserApiFp(this.configuration).userPrototypeDestroyByIdGeofences(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Find a related item by id for geofences.\n     * @param {string} id user id\n     * @param {number} fk Foreign key for geofences\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userPrototypeFindByIdGeofences(id: string, fk: number, options?: any) {\n        return UserApiFp(this.configuration).userPrototypeFindByIdGeofences(id, fk, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Retrieve a summary of all devices on this user account.\n     * @param {string} id user id\n     * @param {string} [pointCount] Maximum number of points to return per device. Default 5.\n     * @param {string} [dateRange] What date range to consider when retrieving recent points. Typical use is [TimeOfLastPointDownload, NOW]. Defaults to all time.\n     * @param {string} [hideApprox] Don&#39;t include GSM / poor accuracy locations. Default to false.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userPrototypeGetDeviceSummary(id: string, pointCount?: string, dateRange?: string, hideApprox?: string, options?: any) {\n        return UserApiFp(this.configuration).userPrototypeGetDeviceSummary(id, pointCount, dateRange, hideApprox, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Queries devices of user.\n     * @param {string} id user id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userPrototypeGetDevices(id: string, filter?: string, options?: any) {\n        return UserApiFp(this.configuration).userPrototypeGetDevices(id, filter, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Retrieve a list of devices in any given zone or group of zones.\n     * @param {string} id user id\n     * @param {string} [zoneId] ID of geofence to search. zoneId or zoneType required.\n     * @param {string} [zoneType] Type of zones to search. Ignored if zoneId is specified. zoneId or zoneType required.\n     * @param {string} [includeApprox] Include GSM / poor accuracy locations. Default to false.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userPrototypeGetDevicesInZone(id: string, zoneId?: string, zoneType?: string, includeApprox?: string, options?: any) {\n        return UserApiFp(this.configuration).userPrototypeGetDevicesInZone(id, zoneId, zoneType, includeApprox, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Queries geofences of user.\n     * @param {string} id user id\n     * @param {string} [filter] JSON Filter object\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userPrototypeGetGeofences(id: string, filter?: string, options?: any) {\n        return UserApiFp(this.configuration).userPrototypeGetGeofences(id, filter, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @param {string} id user id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userPrototypeGetMqttCredentials(id: string, options?: any) {\n        return UserApiFp(this.configuration).userPrototypeGetMqttCredentials(id, options)(this.fetch, this.basePath);\n    }\n\n    /**\n     *\n     * @summary Update a related item by id for geofences.\n     * @param {string} id user id\n     * @param {number} fk Foreign key for geofences\n     * @param {Geofence} [data] Body (JSON)\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof UserApi\n     */\n    public userPrototypeUpdateByIdGeofences(id: string, fk: number, data?: Geofence, options?: any) {\n        return UserApiFp(this.configuration).userPrototypeUpdateByIdGeofences(id, fk, data, options)(this.fetch, this.basePath);\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}